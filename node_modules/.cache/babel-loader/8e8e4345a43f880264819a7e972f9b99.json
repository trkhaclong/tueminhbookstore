{"ast":null,"code":"import axios from 'axios';\nlet host;\n\nif (process.env.NODE_ENV === 'development') {\n  host = 'http://localhost:8080';\n} else {\n  host = 'http://tueminhbookstore.com';\n}\n\nconst API = {\n  makeFileURL: (url, token) => {\n    return host + url + \"?access_token=\" + token;\n  },\n  login: (email, pass, success) => {\n    axios.post(`${host}/api/users/login`, {\n      email: email,\n      password: pass\n    }).then(res => {\n      success(res);\n    });\n  },\n  getUser: (userId, token, success) => {\n    axios.get(`${host}/api/users/${userId}?access_token=${token}`, {\n      params: {\n        filter: {\n          include: 'Profile'\n        }\n      }\n    }).then(res => {\n      success(res);\n    });\n  },\n  register: (name, email, pass, success) => {\n    axios.post(`${host}/api/users`, {\n      name: name,\n      email: email,\n      password: pass\n    }).then(res => {\n      success(res);\n    }).catch(err => {\n      success(err);\n    });\n  },\n  getUsers: (token, success) => {\n    axios.get(`${host}/api/users?access_token=${token}`).then(res => {\n      success(res);\n    });\n  },\n  getPostCount: success => {\n    axios.get(`${host}/api/Posts/count`).then(res => {\n      success(res);\n    });\n  },\n  getPosts: (token, success) => {\n    axios.get(`${host}/api/Posts?access_token=${token}`).then(res => {\n      success(res);\n    });\n  },\n  getSitePosts: (skip, success) => {\n    axios.get(`${host}/api/Posts`, {\n      params: {\n        filter: {\n          skip: skip,\n          limit: 10,\n          include: 'PostImage',\n          fields: {\n            id: true,\n            title: true,\n            slug: true,\n            content: false\n          }\n        }\n      }\n    }).then(res => {\n      success(res);\n    });\n  },\n  addPost: (post, token, success) => {\n    axios.post(`${host}/api/Posts?access_token=${token}`, post).then(res => {\n      success(res);\n    });\n  },\n  updatePost: (post, token, success) => {\n    axios.patch(`${host}/api/Posts/${post.id}?access_token=${token}`, post).then(res => {\n      success(res);\n    });\n  },\n  getSinglePost: (id, token, success) => {\n    axios.get(`${host}/api/Posts/${id}?access_token=${token}`, {\n      params: {\n        filter: {\n          include: 'PostImage'\n        }\n      }\n    }).then(res => {\n      success(res);\n    });\n  },\n  uploadImage: (data, token, postId, userId, success) => {\n    axios.post(`${host}/api/PostImages/upload?post_id=${postId}&access_token=${token}&user_id=${userId}`, data).then(res => {\n      success(res);\n    });\n  },\n  getPostBySlug: (slug, token, success) => {\n    axios.get(`${host}/api/Posts/findOne?access_token=${token}`, {\n      params: {\n        filter: {\n          where: {\n            slug: slug\n          }\n        }\n      }\n    }).then(res => {\n      success(res);\n    });\n  },\n  getProductById: (id, token, success) => {\n    axios.get(`${host}/api/Products/findOne?access_token=${token}`, {\n      params: {\n        filter: {\n          where: {\n            id: id\n          },\n          include: {\n            Comment: 'Profile'\n          }\n        }\n      }\n    }).then(res => {\n      success(res);\n    });\n  },\n  getProductCount: success => {\n    axios.get(`${host}/api/Products/count`).then(res => {\n      success(res);\n    });\n  },\n  getHomeProductCount: success => {\n    axios.get(`${host}/api/Products/count`).then(res => {\n      success(res);\n    });\n  },\n  getProducts: (token, success) => {\n    axios.get(`${host}/api/Products?access_token=${token}`).then(res => {\n      success(res);\n    });\n  },\n  getSiteProducts: (skip, success) => {\n    axios.get(`${host}/api/Products`, {\n      params: {\n        filter: {\n          skip: skip,\n          limit: 10,\n          include: 'ProductImage',\n          fields: {\n            id: true,\n            name: true,\n            supplier: true,\n            author: true,\n            newPrice: true,\n            oldPrice: true,\n            publishing: true,\n            inventory: true,\n            category: true,\n            category1: true,\n            category2: true\n          }\n        }\n      }\n    }).then(res => {\n      success(res);\n    });\n  },\n  getCateProducts: (skip, cate, success) => {\n    axios.get(`${host}/api/Products`, {\n      params: {\n        filter: {\n          skip: skip,\n          limit: 10,\n          include: 'ProductImage',\n          where: {\n            category: cate\n          },\n          fields: {\n            id: true,\n            name: true,\n            supplier: true,\n            author: true,\n            newPrice: true,\n            oldPrice: true,\n            publishing: true,\n            inventory: true,\n            category: true,\n            category1: true,\n            category2: true\n          }\n        }\n      }\n    }).then(res => {\n      success(res);\n    });\n  },\n  getCate1Products: (skip, cate, success) => {\n    axios.get(`${host}/api/Products`, {\n      params: {\n        filter: {\n          skip: skip,\n          limit: 10,\n          include: 'ProductImage',\n          where: {\n            category1: cate\n          },\n          fields: {\n            id: true,\n            name: true,\n            supplier: true,\n            author: true,\n            newPrice: true,\n            oldPrice: true,\n            publishing: true,\n            inventory: true,\n            category: true,\n            category1: true,\n            category2: true\n          }\n        }\n      }\n    }).then(res => {\n      success(res);\n    });\n  },\n  getCate2Products: (skip, cate, success) => {\n    axios.get(`${host}/api/Products`, {\n      params: {\n        filter: {\n          skip: skip,\n          limit: 10,\n          include: 'ProductImage',\n          where: {\n            category2: cate\n          },\n          fields: {\n            id: true,\n            name: true,\n            supplier: true,\n            author: true,\n            newPrice: true,\n            oldPrice: true,\n            publishing: true,\n            inventory: true,\n            category: true,\n            category1: true,\n            category2: true\n          }\n        }\n      }\n    }).then(res => {\n      success(res);\n    });\n  },\n  getHomeSiteProducts: (skip, success) => {\n    axios.get(`${host}/api/Products`, {\n      params: {\n        filter: {\n          skip: skip,\n          include: 'ProductImage',\n          fields: {\n            id: true,\n            name: true,\n            supplier: true,\n            author: true,\n            newPrice: true,\n            oldPrice: true,\n            publishing: true,\n            inventory: true,\n            category: true,\n            category1: true,\n            category2: true\n          }\n        }\n      }\n    }).then(res => {\n      success(res);\n    });\n  },\n  addProduct: (product, token, success) => {\n    axios.post(`${host}/api/Products?access_token=${token}`, product).then(res => {\n      success(res);\n    });\n  },\n  updateProduct: (product, token, success) => {\n    axios.patch(`${host}/api/Products/${product.id}?access_token=${token}`, product).then(res => {\n      success(res);\n    });\n  },\n  getSingleProduct: (id, token, success) => {\n    axios.get(`${host}/api/Products/${id}?access_token=${token}`, {\n      params: {\n        filter: {\n          include: 'ProductImage'\n        }\n      }\n    }).then(res => {\n      success(res);\n    });\n  },\n  uploadProductImage: (data, token, productId, userId, success) => {\n    axios.post(`${host}/api/ProductImages/upload?product_id=${productId}&access_token=${token}&user_id=${userId}`, data).then(res => {\n      success(res);\n    });\n  },\n  getCommentById: (commentId, token, success) => {\n    axios.get(`${host}/api/Comments/${commentId}?access_token=${token}`, {\n      params: {\n        filter: {\n          include: 'Profile'\n        }\n      }\n    }).then(res => {\n      success(res);\n    });\n  },\n  postComment: (comment, token, success) => {\n    axios.post(`${host}/api/Comments?access_token=${token}`, comment, {\n      params: {\n        filter: {\n          include: 'Profile'\n        }\n      }\n    }).then(res => {\n      success(res);\n    });\n  }\n};\nexport default API;","map":{"version":3,"sources":["/mnt/c/Users/Dep Trai/Projects/tueminhbookstore/src/utils/api.js"],"names":["axios","host","process","env","NODE_ENV","API","makeFileURL","url","token","login","email","pass","success","post","password","then","res","getUser","userId","get","params","filter","include","register","name","catch","err","getUsers","getPostCount","getPosts","getSitePosts","skip","limit","fields","id","title","slug","content","addPost","updatePost","patch","getSinglePost","uploadImage","data","postId","getPostBySlug","where","getProductById","Comment","getProductCount","getHomeProductCount","getProducts","getSiteProducts","supplier","author","newPrice","oldPrice","publishing","inventory","category","category1","category2","getCateProducts","cate","getCate1Products","getCate2Products","getHomeSiteProducts","addProduct","product","updateProduct","getSingleProduct","uploadProductImage","productId","getCommentById","commentId","postComment","comment"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\n\r\nlet host;\r\nif(process.env.NODE_ENV === 'development'){\r\n    host = 'http://localhost:8080';\r\n\r\n}else {\r\n    host = 'http://tueminhbookstore.com';\r\n}\r\n\r\nconst API = {\r\n    makeFileURL: (url, token) => {\r\n        return host + url + \"?access_token=\" + token;\r\n    },\r\n    login: (email, pass, success) => {\r\n        axios.post(`${host}/api/users/login`, {email: email, password:pass})\r\n        .then(res => {\r\n            success(res);\r\n        });\r\n    },\r\n    getUser: (userId, token, success) => {\r\n        axios.get(`${host}/api/users/${userId}?access_token=${token}`, {\r\n            params: {\r\n                filter: {\r\n                    include: 'Profile'\r\n                }\r\n            }\r\n        }).then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    register: (name, email, pass, success) => {\r\n        axios.post(`${host}/api/users`, {name: name, email: email, password: pass})\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n        .catch(err => {\r\n            success(err);\r\n        })\r\n    },\r\n    getUsers: (token, success) => {\r\n        axios.get(`${host}/api/users?access_token=${token}`)\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getPostCount: (success) => {\r\n        axios.get(`${host}/api/Posts/count`)\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getPosts: (token, success) => {\r\n        axios.get(`${host}/api/Posts?access_token=${token}`)\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getSitePosts: (skip, success) => {\r\n        axios.get(`${host}/api/Posts`, {\r\n            params: {\r\n                filter: {\r\n                    skip: skip,\r\n                    limit: 10,\r\n                    include: 'PostImage',\r\n                    fields: {\r\n                        id: true,\r\n                        title: true,\r\n                        slug: true,\r\n                        content: false\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    addPost: (post,token,success) => {\r\n        axios.post(`${host}/api/Posts?access_token=${token}`, post)\r\n        .then(res => {\r\n            success(res);\r\n        });\r\n    },\r\n    updatePost: (post, token, success) => {\r\n        axios.patch(`${host}/api/Posts/${post.id}?access_token=${token}`, post)\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getSinglePost: (id, token, success) => {\r\n        axios.get(`${host}/api/Posts/${id}?access_token=${token}`, {\r\n            params: {\r\n                filter: {\r\n                    include: 'PostImage'\r\n                }\r\n            }\r\n        })\r\n        .then(res => {\r\n            success(res);\r\n        });\r\n    },\r\n    uploadImage: (data, token, postId, userId, success) => {\r\n        axios.post(`${host}/api/PostImages/upload?post_id=${postId}&access_token=${token}&user_id=${userId}`, data)\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getPostBySlug: (slug, token, success) => {\r\n        axios.get(`${host}/api/Posts/findOne?access_token=${token}`, {\r\n            params: {\r\n                filter: {\r\n                    where: {slug: slug}\r\n                }\r\n            }\r\n        }).then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getProductById: (id, token, success) => {\r\n        axios.get(`${host}/api/Products/findOne?access_token=${token}`, {\r\n            params: {\r\n                filter: {\r\n                    where: {id: id},\r\n                    include: {Comment: 'Profile'}\r\n                }\r\n            }\r\n        }).then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getProductCount: (success) => {\r\n        axios.get(`${host}/api/Products/count`)\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getHomeProductCount: (success) => {\r\n        axios.get(`${host}/api/Products/count`)\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getProducts: (token, success) => {\r\n        axios.get(`${host}/api/Products?access_token=${token}`)\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getSiteProducts: (skip, success) => {\r\n        axios.get(`${host}/api/Products`, {\r\n            params: {\r\n                filter: {\r\n                    skip: skip,\r\n                    limit: 10,\r\n                    include: 'ProductImage',\r\n                    fields: {\r\n                        id: true,\r\n                        name: true,\r\n                        supplier: true,\r\n                        author: true,\r\n                        newPrice: true,\r\n                        oldPrice: true,\r\n                        publishing: true,\r\n                        inventory: true,\r\n                        category: true,\r\n                        category1: true,\r\n                        category2: true\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getCateProducts: (skip, cate, success) => {\r\n        axios.get(`${host}/api/Products`, {\r\n            params: {\r\n                filter: {\r\n                    skip: skip,\r\n                    limit: 10,\r\n                    include: 'ProductImage',\r\n                    where: {category: cate},\r\n                    fields: {\r\n                        id: true,\r\n                        name: true,\r\n                        supplier: true,\r\n                        author: true,\r\n                        newPrice: true,\r\n                        oldPrice: true,\r\n                        publishing: true,\r\n                        inventory: true,\r\n                        category: true,\r\n                        category1: true,\r\n                        category2: true\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getCate1Products: (skip, cate, success) => {\r\n        axios.get(`${host}/api/Products`, {\r\n            params: {\r\n                filter: {\r\n                    skip: skip,\r\n                    limit: 10,\r\n                    include: 'ProductImage',\r\n                    where: {category1: cate},\r\n                    fields: {\r\n                        id: true,\r\n                        name: true,\r\n                        supplier: true,\r\n                        author: true,\r\n                        newPrice: true,\r\n                        oldPrice: true,\r\n                        publishing: true,\r\n                        inventory: true,\r\n                        category: true,\r\n                        category1: true,\r\n                        category2: true\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getCate2Products: (skip, cate, success) => {\r\n        axios.get(`${host}/api/Products`, {\r\n            params: {\r\n                filter: {\r\n                    skip: skip,\r\n                    limit: 10,\r\n                    include: 'ProductImage',\r\n                    where: {category2: cate},\r\n                    fields: {\r\n                        id: true,\r\n                        name: true,\r\n                        supplier: true,\r\n                        author: true,\r\n                        newPrice: true,\r\n                        oldPrice: true,\r\n                        publishing: true,\r\n                        inventory: true,\r\n                        category: true,\r\n                        category1: true,\r\n                        category2: true\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getHomeSiteProducts: (skip, success) => {\r\n        axios.get(`${host}/api/Products`, {\r\n            params: {\r\n                filter: {\r\n                    skip: skip,\r\n                    include: 'ProductImage',\r\n                    fields: {\r\n                        id: true,\r\n                        name: true,\r\n                        supplier: true,\r\n                        author: true,\r\n                        newPrice: true,\r\n                        oldPrice: true,\r\n                        publishing: true,\r\n                        inventory: true,\r\n                        category: true,\r\n                        category1: true,\r\n                        category2: true\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    addProduct: (product,token,success) => {\r\n        axios.post(`${host}/api/Products?access_token=${token}`, product)\r\n        .then(res => {\r\n            success(res);\r\n        });\r\n    },\r\n    updateProduct: (product, token, success) => {\r\n        axios.patch(`${host}/api/Products/${product.id}?access_token=${token}`, product)\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getSingleProduct: (id, token, success) => {\r\n        axios.get(`${host}/api/Products/${id}?access_token=${token}`, {\r\n            params: {\r\n                filter: {\r\n                    include: 'ProductImage'\r\n                }\r\n            }\r\n        })\r\n        .then(res => {\r\n            success(res);\r\n        });\r\n    },\r\n    uploadProductImage: (data, token, productId, userId, success) => {\r\n        axios.post(`${host}/api/ProductImages/upload?product_id=${productId}&access_token=${token}&user_id=${userId}`, data)\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getCommentById: (commentId, token, success) => {\r\n        axios.get(`${host}/api/Comments/${commentId}?access_token=${token}`, {\r\n            params: {\r\n                filter: {\r\n                    include: 'Profile'\r\n                }\r\n            }\r\n        }).then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    postComment: (comment, token, success) => {\r\n        axios.post(`${host}/api/Comments?access_token=${token}`, comment, {\r\n            params: {\r\n                filter: {\r\n                    include: 'Profile'\r\n                }\r\n            }\r\n        }).then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n\r\n}\r\n\r\nexport default API;"]},"metadata":{},"sourceType":"module"}