{"ast":null,"code":"import axios from 'axios';\nlet host;\n\nif (process.env.NODE_ENV === 'development') {\n  host = 'http://localhost:8080';\n} else {\n  host = 'http://128.199.85.250:8080';\n}\n\nconst API = {\n  makeFileURL: (url, token) => {\n    return host + url + \"?access_token=\" + token;\n  },\n  login: (email, pass, success) => {\n    axios.post(`${host}/api/users/login`, {\n      email: email,\n      password: pass\n    }).then(res => {\n      success(res);\n    });\n  },\n  getUser: (userId, token, success) => {\n    axios.get(`${host}/api/users/${userId}?access_token=${token}`, {\n      params: {\n        filter: {\n          include: 'Profile'\n        }\n      }\n    }).then(res => {\n      success(res);\n    });\n  },\n  register: (name, email, pass, success) => {\n    axios.post(`${host}/api/users`, {\n      name: name,\n      email: email,\n      password: pass\n    }).then(res => {\n      success(res);\n    }).catch(err => {\n      success(err);\n    });\n  },\n  getUsers: (token, success) => {\n    axios.get(`${host}/api/users?access_token=${token}`).then(res => {\n      success(res);\n    });\n  },\n  getReceipts: (token, success) => {\n    axios.get(`${host}/api/receipts?access_token=${token}`).then(res => {\n      success(res);\n    });\n  },\n  getPostCount: success => {\n    axios.get(`${host}/api/Posts/count`).then(res => {\n      success(res);\n    });\n  },\n  getPosts: (token, success) => {\n    axios.get(`${host}/api/Posts?access_token=${token}`).then(res => {\n      success(res);\n    });\n  },\n  getSitePosts: (skip, success) => {\n    axios.get(`${host}/api/Posts`, {\n      params: {\n        filter: {\n          skip: skip,\n          limit: 10,\n          include: 'PostImage',\n          fields: {\n            id: true,\n            title: true,\n            slug: true,\n            content: false\n          }\n        }\n      }\n    }).then(res => {\n      success(res);\n    });\n  },\n  addPost: (post, token, success) => {\n    axios.post(`${host}/api/Posts?access_token=${token}`, post).then(res => {\n      success(res);\n    });\n  },\n  updatePost: (post, token, success) => {\n    axios.patch(`${host}/api/Posts/${post.id}?access_token=${token}`, post).then(res => {\n      success(res);\n    });\n  },\n  getSinglePost: (id, token, success) => {\n    axios.get(`${host}/api/Posts/${id}?access_token=${token}`, {\n      params: {\n        filter: {\n          include: 'PostImage'\n        }\n      }\n    }).then(res => {\n      success(res);\n    });\n  },\n  uploadImage: (data, token, postId, userId, success) => {\n    axios.post(`${host}/api/PostImages/upload?post_id=${postId}&access_token=${token}&user_id=${userId}`, data).then(res => {\n      success(res);\n    });\n  },\n  getPostBySlug: (slug, token, success) => {\n    axios.get(`${host}/api/Posts/findOne?access_token=${token}`, {\n      params: {\n        filter: {\n          where: {\n            slug: slug\n          }\n        }\n      }\n    }).then(res => {\n      success(res);\n    });\n  },\n  getProductById: (id, token, success) => {\n    axios.get(`${host}/api/Products/findOne?access_token=${token}`, {\n      params: {\n        filter: {\n          where: {\n            id: id\n          },\n          include: {\n            Comment: 'Profile'\n          }\n        }\n      }\n    }).then(res => {\n      success(res);\n    });\n  },\n  getProductCount: success => {\n    axios.get(`${host}/api/Products/count`).then(res => {\n      success(res);\n    });\n  },\n  getHomeProductCount: success => {\n    axios.get(`${host}/api/Products/count`).then(res => {\n      success(res);\n    });\n  },\n  getProducts: (token, success) => {\n    axios.get(`${host}/api/Products?access_token=${token}`).then(res => {\n      success(res);\n    });\n  },\n  getSiteProducts: (skip, success) => {\n    axios.get(`${host}/api/Products`, {\n      params: {\n        filter: {\n          skip: skip,\n          limit: 10,\n          include: 'ProductImage',\n          fields: {\n            id: true,\n            name: true,\n            supplier: true,\n            author: true,\n            newPrice: true,\n            oldPrice: true,\n            publishing: true,\n            inventory: true,\n            category: true,\n            category1: true,\n            category2: true,\n            category3: true\n          }\n        }\n      }\n    }).then(res => {\n      success(res);\n    });\n  },\n  getCateProducts: (skip, cate, success) => {\n    axios.get(`${host}/api/Products`, {\n      params: {\n        filter: {\n          skip: skip,\n          limit: 10,\n          include: 'ProductImage',\n          where: {\n            category: cate\n          },\n          fields: {\n            id: true,\n            name: true,\n            supplier: true,\n            author: true,\n            newPrice: true,\n            oldPrice: true,\n            publishing: true,\n            inventory: true,\n            category: true,\n            category1: true,\n            category2: true,\n            category3: true\n          }\n        }\n      }\n    }).then(res => {\n      success(res);\n    });\n  },\n  getCate1Products: (skip, cate, success) => {\n    axios.get(`${host}/api/Products`, {\n      params: {\n        filter: {\n          skip: skip,\n          limit: 10,\n          include: 'ProductImage',\n          where: {\n            category1: cate\n          },\n          fields: {\n            id: true,\n            name: true,\n            supplier: true,\n            author: true,\n            newPrice: true,\n            oldPrice: true,\n            publishing: true,\n            inventory: true,\n            category: true,\n            category1: true,\n            category2: true,\n            category3: true\n          }\n        }\n      }\n    }).then(res => {\n      success(res);\n    });\n  },\n  getCate2Products: (skip, cate, success) => {\n    axios.get(`${host}/api/Products`, {\n      params: {\n        filter: {\n          skip: skip,\n          limit: 10,\n          include: 'ProductImage',\n          where: {\n            category2: cate\n          },\n          fields: {\n            id: true,\n            name: true,\n            supplier: true,\n            author: true,\n            newPrice: true,\n            oldPrice: true,\n            publishing: true,\n            inventory: true,\n            category: true,\n            category1: true,\n            category2: true,\n            category3: true\n          }\n        }\n      }\n    }).then(res => {\n      success(res);\n    });\n  },\n  getCate3Products: (skip, cate, success) => {\n    axios.get(`${host}/api/Products`, {\n      params: {\n        filter: {\n          skip: skip,\n          limit: 10,\n          include: 'ProductImage',\n          where: {\n            category3: cate\n          },\n          fields: {\n            id: true,\n            name: true,\n            supplier: true,\n            author: true,\n            newPrice: true,\n            oldPrice: true,\n            publishing: true,\n            inventory: true,\n            category: true,\n            category1: true,\n            category2: true,\n            category3: true\n          }\n        }\n      }\n    }).then(res => {\n      success(res);\n    });\n  },\n  getHomeSiteProducts: (skip, success) => {\n    axios.get(`${host}/api/Products`, {\n      params: {\n        filter: {\n          skip: skip,\n          include: 'ProductImage',\n          fields: {\n            id: true,\n            name: true,\n            supplier: true,\n            author: true,\n            newPrice: true,\n            oldPrice: true,\n            publishing: true,\n            inventory: true,\n            category: true,\n            category1: true,\n            category2: true,\n            category3: true\n          }\n        }\n      }\n    }).then(res => {\n      success(res);\n    });\n  },\n  addProduct: (product, token, success) => {\n    axios.post(`${host}/api/Products?access_token=${token}`, product).then(res => {\n      success(res);\n    });\n  },\n  updateProduct: (product, token, success) => {\n    axios.patch(`${host}/api/Products/${product.id}?access_token=${token}`, product).then(res => {\n      success(res);\n    });\n  },\n  getSingleProduct: (id, token, success) => {\n    axios.get(`${host}/api/Products/${id}?access_token=${token}`, {\n      params: {\n        filter: {\n          include: 'ProductImage'\n        }\n      }\n    }).then(res => {\n      success(res);\n    });\n  },\n  uploadProductImage: (data, token, productId, userId, success) => {\n    axios.post(`${host}/api/ProductImages/upload?product_id=${productId}&access_token=${token}&user_id=${userId}`, data).then(res => {\n      success(res);\n    });\n  },\n  getCommentById: (commentId, token, success) => {\n    axios.get(`${host}/api/Comments/${commentId}?access_token=${token}`, {\n      params: {\n        filter: {\n          include: 'Profile'\n        }\n      }\n    }).then(res => {\n      success(res);\n    });\n  },\n  postComment: (comment, token, success) => {\n    axios.post(`${host}/api/Comments?access_token=${token}`, comment, {\n      params: {\n        filter: {\n          include: 'Profile'\n        }\n      }\n    }).then(res => {\n      success(res);\n    });\n  },\n  setPayment: (receipt, success) => {\n    axios.post(`${host}/api/receipts`, receipt).then(res => {\n      success(res);\n    });\n  }\n};\nexport default API;","map":{"version":3,"sources":["/mnt/c/Users/Dep Trai/Projects/tueminhbookstore/src/utils/api.js"],"names":["axios","host","process","env","NODE_ENV","API","makeFileURL","url","token","login","email","pass","success","post","password","then","res","getUser","userId","get","params","filter","include","register","name","catch","err","getUsers","getReceipts","getPostCount","getPosts","getSitePosts","skip","limit","fields","id","title","slug","content","addPost","updatePost","patch","getSinglePost","uploadImage","data","postId","getPostBySlug","where","getProductById","Comment","getProductCount","getHomeProductCount","getProducts","getSiteProducts","supplier","author","newPrice","oldPrice","publishing","inventory","category","category1","category2","category3","getCateProducts","cate","getCate1Products","getCate2Products","getCate3Products","getHomeSiteProducts","addProduct","product","updateProduct","getSingleProduct","uploadProductImage","productId","getCommentById","commentId","postComment","comment","setPayment","receipt"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAIC,IAAJ;;AACA,IAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA5B,EAA0C;AACtCH,EAAAA,IAAI,GAAG,uBAAP;AAEH,CAHD,MAGM;AACFA,EAAAA,IAAI,GAAG,4BAAP;AACH;;AAED,MAAMI,GAAG,GAAG;AACRC,EAAAA,WAAW,EAAE,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACzB,WAAOP,IAAI,GAAGM,GAAP,GAAa,gBAAb,GAAgCC,KAAvC;AACH,GAHO;AAIRC,EAAAA,KAAK,EAAE,CAACC,KAAD,EAAQC,IAAR,EAAcC,OAAd,KAA0B;AAC7BZ,IAAAA,KAAK,CAACa,IAAN,CAAY,GAAEZ,IAAK,kBAAnB,EAAsC;AAACS,MAAAA,KAAK,EAAEA,KAAR;AAAeI,MAAAA,QAAQ,EAACH;AAAxB,KAAtC,EACCI,IADD,CACMC,GAAG,IAAI;AACTJ,MAAAA,OAAO,CAACI,GAAD,CAAP;AACH,KAHD;AAIH,GATO;AAURC,EAAAA,OAAO,EAAE,CAACC,MAAD,EAASV,KAAT,EAAgBI,OAAhB,KAA4B;AACjCZ,IAAAA,KAAK,CAACmB,GAAN,CAAW,GAAElB,IAAK,cAAaiB,MAAO,iBAAgBV,KAAM,EAA5D,EAA+D;AAC3DY,MAAAA,MAAM,EAAE;AACJC,QAAAA,MAAM,EAAE;AACJC,UAAAA,OAAO,EAAE;AADL;AADJ;AADmD,KAA/D,EAMGP,IANH,CAMQC,GAAG,IAAI;AACXJ,MAAAA,OAAO,CAACI,GAAD,CAAP;AACH,KARD;AASH,GApBO;AAqBRO,EAAAA,QAAQ,EAAE,CAACC,IAAD,EAAOd,KAAP,EAAcC,IAAd,EAAoBC,OAApB,KAAgC;AACtCZ,IAAAA,KAAK,CAACa,IAAN,CAAY,GAAEZ,IAAK,YAAnB,EAAgC;AAACuB,MAAAA,IAAI,EAAEA,IAAP;AAAad,MAAAA,KAAK,EAAEA,KAApB;AAA2BI,MAAAA,QAAQ,EAAEH;AAArC,KAAhC,EACCI,IADD,CACMC,GAAG,IAAI;AACTJ,MAAAA,OAAO,CAACI,GAAD,CAAP;AACH,KAHD,EAICS,KAJD,CAIOC,GAAG,IAAI;AACVd,MAAAA,OAAO,CAACc,GAAD,CAAP;AACH,KAND;AAOH,GA7BO;AA8BRC,EAAAA,QAAQ,EAAE,CAACnB,KAAD,EAAQI,OAAR,KAAoB;AAC1BZ,IAAAA,KAAK,CAACmB,GAAN,CAAW,GAAElB,IAAK,2BAA0BO,KAAM,EAAlD,EACCO,IADD,CACMC,GAAG,IAAI;AACTJ,MAAAA,OAAO,CAACI,GAAD,CAAP;AACH,KAHD;AAIH,GAnCO;AAoCRY,EAAAA,WAAW,EAAE,CAACpB,KAAD,EAAQI,OAAR,KAAoB;AAC7BZ,IAAAA,KAAK,CAACmB,GAAN,CAAW,GAAElB,IAAK,8BAA6BO,KAAM,EAArD,EACCO,IADD,CACMC,GAAG,IAAI;AACTJ,MAAAA,OAAO,CAACI,GAAD,CAAP;AACH,KAHD;AAIH,GAzCO;AA0CRa,EAAAA,YAAY,EAAGjB,OAAD,IAAa;AACvBZ,IAAAA,KAAK,CAACmB,GAAN,CAAW,GAAElB,IAAK,kBAAlB,EACCc,IADD,CACMC,GAAG,IAAI;AACTJ,MAAAA,OAAO,CAACI,GAAD,CAAP;AACH,KAHD;AAIH,GA/CO;AAgDRc,EAAAA,QAAQ,EAAE,CAACtB,KAAD,EAAQI,OAAR,KAAoB;AAC1BZ,IAAAA,KAAK,CAACmB,GAAN,CAAW,GAAElB,IAAK,2BAA0BO,KAAM,EAAlD,EACCO,IADD,CACMC,GAAG,IAAI;AACTJ,MAAAA,OAAO,CAACI,GAAD,CAAP;AACH,KAHD;AAIH,GArDO;AAsDRe,EAAAA,YAAY,EAAE,CAACC,IAAD,EAAOpB,OAAP,KAAmB;AAC7BZ,IAAAA,KAAK,CAACmB,GAAN,CAAW,GAAElB,IAAK,YAAlB,EAA+B;AAC3BmB,MAAAA,MAAM,EAAE;AACJC,QAAAA,MAAM,EAAE;AACJW,UAAAA,IAAI,EAAEA,IADF;AAEJC,UAAAA,KAAK,EAAE,EAFH;AAGJX,UAAAA,OAAO,EAAE,WAHL;AAIJY,UAAAA,MAAM,EAAE;AACJC,YAAAA,EAAE,EAAE,IADA;AAEJC,YAAAA,KAAK,EAAE,IAFH;AAGJC,YAAAA,IAAI,EAAE,IAHF;AAIJC,YAAAA,OAAO,EAAE;AAJL;AAJJ;AADJ;AADmB,KAA/B,EAeCvB,IAfD,CAeMC,GAAG,IAAI;AACTJ,MAAAA,OAAO,CAACI,GAAD,CAAP;AACH,KAjBD;AAkBH,GAzEO;AA0ERuB,EAAAA,OAAO,EAAE,CAAC1B,IAAD,EAAML,KAAN,EAAYI,OAAZ,KAAwB;AAC7BZ,IAAAA,KAAK,CAACa,IAAN,CAAY,GAAEZ,IAAK,2BAA0BO,KAAM,EAAnD,EAAsDK,IAAtD,EACCE,IADD,CACMC,GAAG,IAAI;AACTJ,MAAAA,OAAO,CAACI,GAAD,CAAP;AACH,KAHD;AAIH,GA/EO;AAgFRwB,EAAAA,UAAU,EAAE,CAAC3B,IAAD,EAAOL,KAAP,EAAcI,OAAd,KAA0B;AAClCZ,IAAAA,KAAK,CAACyC,KAAN,CAAa,GAAExC,IAAK,cAAaY,IAAI,CAACsB,EAAG,iBAAgB3B,KAAM,EAA/D,EAAkEK,IAAlE,EACCE,IADD,CACMC,GAAG,IAAI;AACTJ,MAAAA,OAAO,CAACI,GAAD,CAAP;AACH,KAHD;AAIH,GArFO;AAsFR0B,EAAAA,aAAa,EAAE,CAACP,EAAD,EAAK3B,KAAL,EAAYI,OAAZ,KAAwB;AACnCZ,IAAAA,KAAK,CAACmB,GAAN,CAAW,GAAElB,IAAK,cAAakC,EAAG,iBAAgB3B,KAAM,EAAxD,EAA2D;AACvDY,MAAAA,MAAM,EAAE;AACJC,QAAAA,MAAM,EAAE;AACJC,UAAAA,OAAO,EAAE;AADL;AADJ;AAD+C,KAA3D,EAOCP,IAPD,CAOMC,GAAG,IAAI;AACTJ,MAAAA,OAAO,CAACI,GAAD,CAAP;AACH,KATD;AAUH,GAjGO;AAkGR2B,EAAAA,WAAW,EAAE,CAACC,IAAD,EAAOpC,KAAP,EAAcqC,MAAd,EAAsB3B,MAAtB,EAA8BN,OAA9B,KAA0C;AACnDZ,IAAAA,KAAK,CAACa,IAAN,CAAY,GAAEZ,IAAK,kCAAiC4C,MAAO,iBAAgBrC,KAAM,YAAWU,MAAO,EAAnG,EAAsG0B,IAAtG,EACC7B,IADD,CACMC,GAAG,IAAI;AACTJ,MAAAA,OAAO,CAACI,GAAD,CAAP;AACH,KAHD;AAIH,GAvGO;AAwGR8B,EAAAA,aAAa,EAAE,CAACT,IAAD,EAAO7B,KAAP,EAAcI,OAAd,KAA0B;AACrCZ,IAAAA,KAAK,CAACmB,GAAN,CAAW,GAAElB,IAAK,mCAAkCO,KAAM,EAA1D,EAA6D;AACzDY,MAAAA,MAAM,EAAE;AACJC,QAAAA,MAAM,EAAE;AACJ0B,UAAAA,KAAK,EAAE;AAACV,YAAAA,IAAI,EAAEA;AAAP;AADH;AADJ;AADiD,KAA7D,EAMGtB,IANH,CAMQC,GAAG,IAAI;AACXJ,MAAAA,OAAO,CAACI,GAAD,CAAP;AACH,KARD;AASH,GAlHO;AAmHRgC,EAAAA,cAAc,EAAE,CAACb,EAAD,EAAK3B,KAAL,EAAYI,OAAZ,KAAwB;AACpCZ,IAAAA,KAAK,CAACmB,GAAN,CAAW,GAAElB,IAAK,sCAAqCO,KAAM,EAA7D,EAAgE;AAC5DY,MAAAA,MAAM,EAAE;AACJC,QAAAA,MAAM,EAAE;AACJ0B,UAAAA,KAAK,EAAE;AAACZ,YAAAA,EAAE,EAAEA;AAAL,WADH;AAEJb,UAAAA,OAAO,EAAE;AAAC2B,YAAAA,OAAO,EAAE;AAAV;AAFL;AADJ;AADoD,KAAhE,EAOGlC,IAPH,CAOQC,GAAG,IAAI;AACXJ,MAAAA,OAAO,CAACI,GAAD,CAAP;AACH,KATD;AAUH,GA9HO;AA+HRkC,EAAAA,eAAe,EAAGtC,OAAD,IAAa;AAC1BZ,IAAAA,KAAK,CAACmB,GAAN,CAAW,GAAElB,IAAK,qBAAlB,EACCc,IADD,CACMC,GAAG,IAAI;AACTJ,MAAAA,OAAO,CAACI,GAAD,CAAP;AACH,KAHD;AAIH,GApIO;AAqIRmC,EAAAA,mBAAmB,EAAGvC,OAAD,IAAa;AAC9BZ,IAAAA,KAAK,CAACmB,GAAN,CAAW,GAAElB,IAAK,qBAAlB,EACCc,IADD,CACMC,GAAG,IAAI;AACTJ,MAAAA,OAAO,CAACI,GAAD,CAAP;AACH,KAHD;AAIH,GA1IO;AA2IRoC,EAAAA,WAAW,EAAE,CAAC5C,KAAD,EAAQI,OAAR,KAAoB;AAC7BZ,IAAAA,KAAK,CAACmB,GAAN,CAAW,GAAElB,IAAK,8BAA6BO,KAAM,EAArD,EACCO,IADD,CACMC,GAAG,IAAI;AACTJ,MAAAA,OAAO,CAACI,GAAD,CAAP;AACH,KAHD;AAIH,GAhJO;AAiJRqC,EAAAA,eAAe,EAAE,CAACrB,IAAD,EAAOpB,OAAP,KAAmB;AAChCZ,IAAAA,KAAK,CAACmB,GAAN,CAAW,GAAElB,IAAK,eAAlB,EAAkC;AAC9BmB,MAAAA,MAAM,EAAE;AACJC,QAAAA,MAAM,EAAE;AACJW,UAAAA,IAAI,EAAEA,IADF;AAEJC,UAAAA,KAAK,EAAE,EAFH;AAGJX,UAAAA,OAAO,EAAE,cAHL;AAIJY,UAAAA,MAAM,EAAE;AACJC,YAAAA,EAAE,EAAE,IADA;AAEJX,YAAAA,IAAI,EAAE,IAFF;AAGJ8B,YAAAA,QAAQ,EAAE,IAHN;AAIJC,YAAAA,MAAM,EAAE,IAJJ;AAKJC,YAAAA,QAAQ,EAAE,IALN;AAMJC,YAAAA,QAAQ,EAAE,IANN;AAOJC,YAAAA,UAAU,EAAE,IAPR;AAQJC,YAAAA,SAAS,EAAE,IARP;AASJC,YAAAA,QAAQ,EAAE,IATN;AAUJC,YAAAA,SAAS,EAAE,IAVP;AAWJC,YAAAA,SAAS,EAAE,IAXP;AAWaC,YAAAA,SAAS,EAAE;AAXxB;AAJJ;AADJ;AADsB,KAAlC,EAsBChD,IAtBD,CAsBMC,GAAG,IAAI;AACTJ,MAAAA,OAAO,CAACI,GAAD,CAAP;AACH,KAxBD;AAyBH,GA3KO;AA4KRgD,EAAAA,eAAe,EAAE,CAAChC,IAAD,EAAOiC,IAAP,EAAarD,OAAb,KAAyB;AACtCZ,IAAAA,KAAK,CAACmB,GAAN,CAAW,GAAElB,IAAK,eAAlB,EAAkC;AAC9BmB,MAAAA,MAAM,EAAE;AACJC,QAAAA,MAAM,EAAE;AACJW,UAAAA,IAAI,EAAEA,IADF;AAEJC,UAAAA,KAAK,EAAE,EAFH;AAGJX,UAAAA,OAAO,EAAE,cAHL;AAIJyB,UAAAA,KAAK,EAAE;AAACa,YAAAA,QAAQ,EAAEK;AAAX,WAJH;AAKJ/B,UAAAA,MAAM,EAAE;AACJC,YAAAA,EAAE,EAAE,IADA;AAEJX,YAAAA,IAAI,EAAE,IAFF;AAGJ8B,YAAAA,QAAQ,EAAE,IAHN;AAIJC,YAAAA,MAAM,EAAE,IAJJ;AAKJC,YAAAA,QAAQ,EAAE,IALN;AAMJC,YAAAA,QAAQ,EAAE,IANN;AAOJC,YAAAA,UAAU,EAAE,IAPR;AAQJC,YAAAA,SAAS,EAAE,IARP;AASJC,YAAAA,QAAQ,EAAE,IATN;AAUJC,YAAAA,SAAS,EAAE,IAVP;AAWJC,YAAAA,SAAS,EAAE,IAXP;AAWaC,YAAAA,SAAS,EAAE;AAXxB;AALJ;AADJ;AADsB,KAAlC,EAuBChD,IAvBD,CAuBMC,GAAG,IAAI;AACTJ,MAAAA,OAAO,CAACI,GAAD,CAAP;AACH,KAzBD;AA0BH,GAvMO;AAwMRkD,EAAAA,gBAAgB,EAAE,CAAClC,IAAD,EAAOiC,IAAP,EAAarD,OAAb,KAAyB;AACvCZ,IAAAA,KAAK,CAACmB,GAAN,CAAW,GAAElB,IAAK,eAAlB,EAAkC;AAC9BmB,MAAAA,MAAM,EAAE;AACJC,QAAAA,MAAM,EAAE;AACJW,UAAAA,IAAI,EAAEA,IADF;AAEJC,UAAAA,KAAK,EAAE,EAFH;AAGJX,UAAAA,OAAO,EAAE,cAHL;AAIJyB,UAAAA,KAAK,EAAE;AAACc,YAAAA,SAAS,EAAEI;AAAZ,WAJH;AAKJ/B,UAAAA,MAAM,EAAE;AACJC,YAAAA,EAAE,EAAE,IADA;AAEJX,YAAAA,IAAI,EAAE,IAFF;AAGJ8B,YAAAA,QAAQ,EAAE,IAHN;AAIJC,YAAAA,MAAM,EAAE,IAJJ;AAKJC,YAAAA,QAAQ,EAAE,IALN;AAMJC,YAAAA,QAAQ,EAAE,IANN;AAOJC,YAAAA,UAAU,EAAE,IAPR;AAQJC,YAAAA,SAAS,EAAE,IARP;AASJC,YAAAA,QAAQ,EAAE,IATN;AAUJC,YAAAA,SAAS,EAAE,IAVP;AAWJC,YAAAA,SAAS,EAAE,IAXP;AAWaC,YAAAA,SAAS,EAAE;AAXxB;AALJ;AADJ;AADsB,KAAlC,EAuBChD,IAvBD,CAuBMC,GAAG,IAAI;AACTJ,MAAAA,OAAO,CAACI,GAAD,CAAP;AACH,KAzBD;AA0BH,GAnOO;AAoORmD,EAAAA,gBAAgB,EAAE,CAACnC,IAAD,EAAOiC,IAAP,EAAarD,OAAb,KAAyB;AACvCZ,IAAAA,KAAK,CAACmB,GAAN,CAAW,GAAElB,IAAK,eAAlB,EAAkC;AAC9BmB,MAAAA,MAAM,EAAE;AACJC,QAAAA,MAAM,EAAE;AACJW,UAAAA,IAAI,EAAEA,IADF;AAEJC,UAAAA,KAAK,EAAE,EAFH;AAGJX,UAAAA,OAAO,EAAE,cAHL;AAIJyB,UAAAA,KAAK,EAAE;AAACe,YAAAA,SAAS,EAAEG;AAAZ,WAJH;AAKJ/B,UAAAA,MAAM,EAAE;AACJC,YAAAA,EAAE,EAAE,IADA;AAEJX,YAAAA,IAAI,EAAE,IAFF;AAGJ8B,YAAAA,QAAQ,EAAE,IAHN;AAIJC,YAAAA,MAAM,EAAE,IAJJ;AAKJC,YAAAA,QAAQ,EAAE,IALN;AAMJC,YAAAA,QAAQ,EAAE,IANN;AAOJC,YAAAA,UAAU,EAAE,IAPR;AAQJC,YAAAA,SAAS,EAAE,IARP;AASJC,YAAAA,QAAQ,EAAE,IATN;AAUJC,YAAAA,SAAS,EAAE,IAVP;AAWJC,YAAAA,SAAS,EAAE,IAXP;AAWaC,YAAAA,SAAS,EAAE;AAXxB;AALJ;AADJ;AADsB,KAAlC,EAuBChD,IAvBD,CAuBMC,GAAG,IAAI;AACTJ,MAAAA,OAAO,CAACI,GAAD,CAAP;AACH,KAzBD;AA0BH,GA/PO;AAgQRoD,EAAAA,gBAAgB,EAAE,CAACpC,IAAD,EAAOiC,IAAP,EAAarD,OAAb,KAAyB;AACvCZ,IAAAA,KAAK,CAACmB,GAAN,CAAW,GAAElB,IAAK,eAAlB,EAAkC;AAC9BmB,MAAAA,MAAM,EAAE;AACJC,QAAAA,MAAM,EAAE;AACJW,UAAAA,IAAI,EAAEA,IADF;AAEJC,UAAAA,KAAK,EAAE,EAFH;AAGJX,UAAAA,OAAO,EAAE,cAHL;AAIJyB,UAAAA,KAAK,EAAE;AAACgB,YAAAA,SAAS,EAAEE;AAAZ,WAJH;AAKJ/B,UAAAA,MAAM,EAAE;AACJC,YAAAA,EAAE,EAAE,IADA;AAEJX,YAAAA,IAAI,EAAE,IAFF;AAGJ8B,YAAAA,QAAQ,EAAE,IAHN;AAIJC,YAAAA,MAAM,EAAE,IAJJ;AAKJC,YAAAA,QAAQ,EAAE,IALN;AAMJC,YAAAA,QAAQ,EAAE,IANN;AAOJC,YAAAA,UAAU,EAAE,IAPR;AAQJC,YAAAA,SAAS,EAAE,IARP;AASJC,YAAAA,QAAQ,EAAE,IATN;AAUJC,YAAAA,SAAS,EAAE,IAVP;AAWJC,YAAAA,SAAS,EAAE,IAXP;AAWaC,YAAAA,SAAS,EAAE;AAXxB;AALJ;AADJ;AADsB,KAAlC,EAuBChD,IAvBD,CAuBMC,GAAG,IAAI;AACTJ,MAAAA,OAAO,CAACI,GAAD,CAAP;AACH,KAzBD;AA0BH,GA3RO;AA4RRqD,EAAAA,mBAAmB,EAAE,CAACrC,IAAD,EAAOpB,OAAP,KAAmB;AACpCZ,IAAAA,KAAK,CAACmB,GAAN,CAAW,GAAElB,IAAK,eAAlB,EAAkC;AAC9BmB,MAAAA,MAAM,EAAE;AACJC,QAAAA,MAAM,EAAE;AACJW,UAAAA,IAAI,EAAEA,IADF;AAEJV,UAAAA,OAAO,EAAE,cAFL;AAGJY,UAAAA,MAAM,EAAE;AACJC,YAAAA,EAAE,EAAE,IADA;AAEJX,YAAAA,IAAI,EAAE,IAFF;AAGJ8B,YAAAA,QAAQ,EAAE,IAHN;AAIJC,YAAAA,MAAM,EAAE,IAJJ;AAKJC,YAAAA,QAAQ,EAAE,IALN;AAMJC,YAAAA,QAAQ,EAAE,IANN;AAOJC,YAAAA,UAAU,EAAE,IAPR;AAQJC,YAAAA,SAAS,EAAE,IARP;AASJC,YAAAA,QAAQ,EAAE,IATN;AAUJC,YAAAA,SAAS,EAAE,IAVP;AAWJC,YAAAA,SAAS,EAAE,IAXP;AAWaC,YAAAA,SAAS,EAAE;AAXxB;AAHJ;AADJ;AADsB,KAAlC,EAqBChD,IArBD,CAqBMC,GAAG,IAAI;AACTJ,MAAAA,OAAO,CAACI,GAAD,CAAP;AACH,KAvBD;AAwBH,GArTO;AAsTRsD,EAAAA,UAAU,EAAE,CAACC,OAAD,EAAS/D,KAAT,EAAeI,OAAf,KAA2B;AACnCZ,IAAAA,KAAK,CAACa,IAAN,CAAY,GAAEZ,IAAK,8BAA6BO,KAAM,EAAtD,EAAyD+D,OAAzD,EACCxD,IADD,CACMC,GAAG,IAAI;AACTJ,MAAAA,OAAO,CAACI,GAAD,CAAP;AACH,KAHD;AAIH,GA3TO;AA4TRwD,EAAAA,aAAa,EAAE,CAACD,OAAD,EAAU/D,KAAV,EAAiBI,OAAjB,KAA6B;AACxCZ,IAAAA,KAAK,CAACyC,KAAN,CAAa,GAAExC,IAAK,iBAAgBsE,OAAO,CAACpC,EAAG,iBAAgB3B,KAAM,EAArE,EAAwE+D,OAAxE,EACCxD,IADD,CACMC,GAAG,IAAI;AACTJ,MAAAA,OAAO,CAACI,GAAD,CAAP;AACH,KAHD;AAIH,GAjUO;AAkURyD,EAAAA,gBAAgB,EAAE,CAACtC,EAAD,EAAK3B,KAAL,EAAYI,OAAZ,KAAwB;AACtCZ,IAAAA,KAAK,CAACmB,GAAN,CAAW,GAAElB,IAAK,iBAAgBkC,EAAG,iBAAgB3B,KAAM,EAA3D,EAA8D;AAC1DY,MAAAA,MAAM,EAAE;AACJC,QAAAA,MAAM,EAAE;AACJC,UAAAA,OAAO,EAAE;AADL;AADJ;AADkD,KAA9D,EAOCP,IAPD,CAOMC,GAAG,IAAI;AACTJ,MAAAA,OAAO,CAACI,GAAD,CAAP;AACH,KATD;AAUH,GA7UO;AA8UR0D,EAAAA,kBAAkB,EAAE,CAAC9B,IAAD,EAAOpC,KAAP,EAAcmE,SAAd,EAAyBzD,MAAzB,EAAiCN,OAAjC,KAA6C;AAC7DZ,IAAAA,KAAK,CAACa,IAAN,CAAY,GAAEZ,IAAK,wCAAuC0E,SAAU,iBAAgBnE,KAAM,YAAWU,MAAO,EAA5G,EAA+G0B,IAA/G,EACC7B,IADD,CACMC,GAAG,IAAI;AACTJ,MAAAA,OAAO,CAACI,GAAD,CAAP;AACH,KAHD;AAIH,GAnVO;AAoVR4D,EAAAA,cAAc,EAAE,CAACC,SAAD,EAAYrE,KAAZ,EAAmBI,OAAnB,KAA+B;AAC3CZ,IAAAA,KAAK,CAACmB,GAAN,CAAW,GAAElB,IAAK,iBAAgB4E,SAAU,iBAAgBrE,KAAM,EAAlE,EAAqE;AACjEY,MAAAA,MAAM,EAAE;AACJC,QAAAA,MAAM,EAAE;AACJC,UAAAA,OAAO,EAAE;AADL;AADJ;AADyD,KAArE,EAMGP,IANH,CAMQC,GAAG,IAAI;AACXJ,MAAAA,OAAO,CAACI,GAAD,CAAP;AACH,KARD;AASH,GA9VO;AA+VR8D,EAAAA,WAAW,EAAE,CAACC,OAAD,EAAUvE,KAAV,EAAiBI,OAAjB,KAA6B;AACtCZ,IAAAA,KAAK,CAACa,IAAN,CAAY,GAAEZ,IAAK,8BAA6BO,KAAM,EAAtD,EAAyDuE,OAAzD,EAAkE;AAC9D3D,MAAAA,MAAM,EAAE;AACJC,QAAAA,MAAM,EAAE;AACJC,UAAAA,OAAO,EAAE;AADL;AADJ;AADsD,KAAlE,EAMGP,IANH,CAMQC,GAAG,IAAI;AACXJ,MAAAA,OAAO,CAACI,GAAD,CAAP;AACH,KARD;AASH,GAzWO;AA0WRgE,EAAAA,UAAU,EAAE,CAACC,OAAD,EAAUrE,OAAV,KAAsB;AAC9BZ,IAAAA,KAAK,CAACa,IAAN,CAAY,GAAEZ,IAAK,eAAnB,EAAmCgF,OAAnC,EACClE,IADD,CACMC,GAAG,IAAI;AACTJ,MAAAA,OAAO,CAACI,GAAD,CAAP;AACH,KAHD;AAIH;AA/WO,CAAZ;AAmXA,eAAeX,GAAf","sourcesContent":["import axios from 'axios';\r\n\r\nlet host;\r\nif(process.env.NODE_ENV === 'development'){\r\n    host = 'http://localhost:8080';\r\n\r\n}else {\r\n    host = 'http://128.199.85.250:8080';\r\n}\r\n\r\nconst API = {\r\n    makeFileURL: (url, token) => {\r\n        return host + url + \"?access_token=\" + token;\r\n    },\r\n    login: (email, pass, success) => {\r\n        axios.post(`${host}/api/users/login`, {email: email, password:pass})\r\n        .then(res => {\r\n            success(res);\r\n        });\r\n    },\r\n    getUser: (userId, token, success) => {\r\n        axios.get(`${host}/api/users/${userId}?access_token=${token}`, {\r\n            params: {\r\n                filter: {\r\n                    include: 'Profile'\r\n                }\r\n            }\r\n        }).then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    register: (name, email, pass, success) => {\r\n        axios.post(`${host}/api/users`, {name: name, email: email, password: pass})\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n        .catch(err => {\r\n            success(err);\r\n        })\r\n    },\r\n    getUsers: (token, success) => {\r\n        axios.get(`${host}/api/users?access_token=${token}`)\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getReceipts: (token, success) => {\r\n        axios.get(`${host}/api/receipts?access_token=${token}`)\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getPostCount: (success) => {\r\n        axios.get(`${host}/api/Posts/count`)\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getPosts: (token, success) => {\r\n        axios.get(`${host}/api/Posts?access_token=${token}`)\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getSitePosts: (skip, success) => {\r\n        axios.get(`${host}/api/Posts`, {\r\n            params: {\r\n                filter: {\r\n                    skip: skip,\r\n                    limit: 10,\r\n                    include: 'PostImage',\r\n                    fields: {\r\n                        id: true,\r\n                        title: true,\r\n                        slug: true,\r\n                        content: false\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    addPost: (post,token,success) => {\r\n        axios.post(`${host}/api/Posts?access_token=${token}`, post)\r\n        .then(res => {\r\n            success(res);\r\n        });\r\n    },\r\n    updatePost: (post, token, success) => {\r\n        axios.patch(`${host}/api/Posts/${post.id}?access_token=${token}`, post)\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getSinglePost: (id, token, success) => {\r\n        axios.get(`${host}/api/Posts/${id}?access_token=${token}`, {\r\n            params: {\r\n                filter: {\r\n                    include: 'PostImage'\r\n                }\r\n            }\r\n        })\r\n        .then(res => {\r\n            success(res);\r\n        });\r\n    },\r\n    uploadImage: (data, token, postId, userId, success) => {\r\n        axios.post(`${host}/api/PostImages/upload?post_id=${postId}&access_token=${token}&user_id=${userId}`, data)\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getPostBySlug: (slug, token, success) => {\r\n        axios.get(`${host}/api/Posts/findOne?access_token=${token}`, {\r\n            params: {\r\n                filter: {\r\n                    where: {slug: slug}\r\n                }\r\n            }\r\n        }).then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getProductById: (id, token, success) => {\r\n        axios.get(`${host}/api/Products/findOne?access_token=${token}`, {\r\n            params: {\r\n                filter: {\r\n                    where: {id: id},\r\n                    include: {Comment: 'Profile'}\r\n                }\r\n            }\r\n        }).then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getProductCount: (success) => {\r\n        axios.get(`${host}/api/Products/count`)\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getHomeProductCount: (success) => {\r\n        axios.get(`${host}/api/Products/count`)\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getProducts: (token, success) => {\r\n        axios.get(`${host}/api/Products?access_token=${token}`)\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getSiteProducts: (skip, success) => {\r\n        axios.get(`${host}/api/Products`, {\r\n            params: {\r\n                filter: {\r\n                    skip: skip,\r\n                    limit: 10,\r\n                    include: 'ProductImage',\r\n                    fields: {\r\n                        id: true,\r\n                        name: true,\r\n                        supplier: true,\r\n                        author: true,\r\n                        newPrice: true,\r\n                        oldPrice: true,\r\n                        publishing: true,\r\n                        inventory: true,\r\n                        category: true,\r\n                        category1: true,\r\n                        category2: true, category3: true\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getCateProducts: (skip, cate, success) => {\r\n        axios.get(`${host}/api/Products`, {\r\n            params: {\r\n                filter: {\r\n                    skip: skip,\r\n                    limit: 10,\r\n                    include: 'ProductImage',\r\n                    where: {category: cate},\r\n                    fields: {\r\n                        id: true,\r\n                        name: true,\r\n                        supplier: true,\r\n                        author: true,\r\n                        newPrice: true,\r\n                        oldPrice: true,\r\n                        publishing: true,\r\n                        inventory: true,\r\n                        category: true,\r\n                        category1: true,\r\n                        category2: true, category3: true\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getCate1Products: (skip, cate, success) => {\r\n        axios.get(`${host}/api/Products`, {\r\n            params: {\r\n                filter: {\r\n                    skip: skip,\r\n                    limit: 10,\r\n                    include: 'ProductImage',\r\n                    where: {category1: cate},\r\n                    fields: {\r\n                        id: true,\r\n                        name: true,\r\n                        supplier: true,\r\n                        author: true,\r\n                        newPrice: true,\r\n                        oldPrice: true,\r\n                        publishing: true,\r\n                        inventory: true,\r\n                        category: true,\r\n                        category1: true,\r\n                        category2: true, category3: true\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getCate2Products: (skip, cate, success) => {\r\n        axios.get(`${host}/api/Products`, {\r\n            params: {\r\n                filter: {\r\n                    skip: skip,\r\n                    limit: 10,\r\n                    include: 'ProductImage',\r\n                    where: {category2: cate},\r\n                    fields: {\r\n                        id: true,\r\n                        name: true,\r\n                        supplier: true,\r\n                        author: true,\r\n                        newPrice: true,\r\n                        oldPrice: true,\r\n                        publishing: true,\r\n                        inventory: true,\r\n                        category: true,\r\n                        category1: true,\r\n                        category2: true, category3: true\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getCate3Products: (skip, cate, success) => {\r\n        axios.get(`${host}/api/Products`, {\r\n            params: {\r\n                filter: {\r\n                    skip: skip,\r\n                    limit: 10,\r\n                    include: 'ProductImage',\r\n                    where: {category3: cate},\r\n                    fields: {\r\n                        id: true,\r\n                        name: true,\r\n                        supplier: true,\r\n                        author: true,\r\n                        newPrice: true,\r\n                        oldPrice: true,\r\n                        publishing: true,\r\n                        inventory: true,\r\n                        category: true,\r\n                        category1: true,\r\n                        category2: true, category3: true\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getHomeSiteProducts: (skip, success) => {\r\n        axios.get(`${host}/api/Products`, {\r\n            params: {\r\n                filter: {\r\n                    skip: skip,\r\n                    include: 'ProductImage',\r\n                    fields: {\r\n                        id: true,\r\n                        name: true,\r\n                        supplier: true,\r\n                        author: true,\r\n                        newPrice: true,\r\n                        oldPrice: true,\r\n                        publishing: true,\r\n                        inventory: true,\r\n                        category: true,\r\n                        category1: true,\r\n                        category2: true, category3: true\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    addProduct: (product,token,success) => {\r\n        axios.post(`${host}/api/Products?access_token=${token}`, product)\r\n        .then(res => {\r\n            success(res);\r\n        });\r\n    },\r\n    updateProduct: (product, token, success) => {\r\n        axios.patch(`${host}/api/Products/${product.id}?access_token=${token}`, product)\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getSingleProduct: (id, token, success) => {\r\n        axios.get(`${host}/api/Products/${id}?access_token=${token}`, {\r\n            params: {\r\n                filter: {\r\n                    include: 'ProductImage'\r\n                }\r\n            }\r\n        })\r\n        .then(res => {\r\n            success(res);\r\n        });\r\n    },\r\n    uploadProductImage: (data, token, productId, userId, success) => {\r\n        axios.post(`${host}/api/ProductImages/upload?product_id=${productId}&access_token=${token}&user_id=${userId}`, data)\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getCommentById: (commentId, token, success) => {\r\n        axios.get(`${host}/api/Comments/${commentId}?access_token=${token}`, {\r\n            params: {\r\n                filter: {\r\n                    include: 'Profile'\r\n                }\r\n            }\r\n        }).then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    postComment: (comment, token, success) => {\r\n        axios.post(`${host}/api/Comments?access_token=${token}`, comment, {\r\n            params: {\r\n                filter: {\r\n                    include: 'Profile'\r\n                }\r\n            }\r\n        }).then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    setPayment: (receipt, success) => {\r\n        axios.post(`${host}/api/receipts`, receipt)\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport default API;"]},"metadata":{},"sourceType":"module"}