{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Dep Trai/Projects/tueminhbookstore/src/components/Pages/Login.js\";\nimport React, { Component } from 'react';\nimport Field from '../Common/Field';\nimport { withFormik } from 'formik';\nimport { connect } from 'react-redux';\nimport * as Yup from 'yup';\nimport * as AuthActions from '../../store/actions/authActions';\nconst fields = [{\n  name: 'email',\n  elementName: 'input',\n  type: 'email',\n  placeholder: 'Your email'\n}, {\n  name: 'password',\n  elementName: 'input',\n  type: 'password',\n  placeholder: 'Password'\n}];\n\nclass Login extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 29\n      }\n    }, \"Login\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        this.props.login(this.props.values.email, this.props.values.password);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 29\n      }\n    }, fields.map((f, i) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Field, Object.assign({\n        key: i\n      }, f, {\n        value: this.props.values[f.name],\n        name: f.name,\n        onChange: this.props.handleChange,\n        onBlur: this.props.handleBlur,\n        touched: this.props.touched[f.name],\n        errors: this.props.errors[f.name],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 33\n        }\n      })));\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 33\n      }\n    }, \"Login\")))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: (email, pass) => {\n      dispatch(AuthActions.login(email, pass));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withFormik({\n  mapPropsToValues: () => ({\n    email: '',\n    password: ''\n  }),\n  validationSchema: Yup.object().shape({\n    email: Yup.string().email('Email is invalid.').required('Login with email.'),\n    password: Yup.string().required('Enter Password')\n  }),\n  handleSubmit: (values, {\n    setSubmitting\n  }, login) => {\n    console.log(\"Login attempt\", values);\n    login(values.email, values.password);\n  }\n})(Login));","map":{"version":3,"sources":["/mnt/c/Users/Dep Trai/Projects/tueminhbookstore/src/components/Pages/Login.js"],"names":["React","Component","Field","withFormik","connect","Yup","AuthActions","fields","name","elementName","type","placeholder","Login","render","e","preventDefault","props","login","values","email","password","map","f","i","handleChange","handleBlur","touched","errors","mapStateToProps","state","auth","mapDispatchToProps","dispatch","pass","mapPropsToValues","validationSchema","object","shape","string","required","handleSubmit","setSubmitting","console","log"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Field from '../Common/Field';\r\nimport {withFormik} from 'formik';\r\nimport {connect} from 'react-redux';\r\nimport * as Yup from 'yup';\r\nimport * as AuthActions from '../../store/actions/authActions';\r\n\r\nconst fields = [\r\n    {name: 'email', elementName: 'input', type: 'email', placeholder: 'Your email'},\r\n    {name: 'password', elementName: 'input', type: 'password', placeholder: 'Password'}\r\n]\r\n\r\nclass Login extends Component {\r\n    render(){\r\n        return(\r\n            <div className=\"login-page\">\r\n                <div className=\"container\">\r\n                    <div className=\"login-form\">\r\n                        <div className=\"row\">\r\n                            <h1>Login</h1>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <form onSubmit={e => {\r\n                                e.preventDefault();\r\n                                this.props.login(this.props.values.email, this.props.values.password);\r\n                            }}>\r\n                            {fields.map((f, i) => {\r\n                                return (\r\n                                <div className=\"col-md-12\">\r\n                                <Field\r\n                                    key={i} \r\n                                    {...f}\r\n                                    value={this.props.values[f.name]}\r\n                                    name={f.name}\r\n                                    onChange={this.props.handleChange}\r\n                                    onBlur={this.props.handleBlur}\r\n                                    touched={(this.props.touched[f.name])}\r\n                                    errors={this.props.errors[f.name]} \r\n                                />\r\n                                </div>\r\n                                )\r\n                            })}\r\n                            <div className=\"col-md-12\">\r\n                                <button className=\"btn btn-primary\">Login</button>\r\n                            </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        login: (email,pass) => {\r\n            dispatch(AuthActions.login(email,pass));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withFormik ({\r\n    mapPropsToValues: () => ({\r\n        email: '',\r\n        password: ''\r\n    }),\r\n    validationSchema: Yup.object().shape({\r\n        email: Yup.string().email('Email is invalid.').required('Login with email.'),\r\n        password: Yup.string().required('Enter Password')\r\n    }),\r\n    handleSubmit: (values, {setSubmitting}, login) => {\r\n        console.log(\"Login attempt\", values);\r\n        login(values.email, values.password);\r\n    }\r\n})(Login));"]},"metadata":{},"sourceType":"module"}