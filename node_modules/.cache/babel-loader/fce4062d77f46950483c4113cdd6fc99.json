{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Long\\\\Projects\\\\tueminhbookstore\\\\src\\\\components\\\\Common\\\\Header\\\\SlideShow.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport '../../assets/css/slideShow.css';\n\nclass SlideShow extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      slideIndex: 0\n    };\n    const ratioWHArray = this.props.ratio.split(\":\");\n    this.ratioWH = ratioWHArray[0] / ratioWHArray[1];\n    this.backward = this.backward.bind(this);\n    this.forward = this.forward.bind(this);\n    this.setSlideIndex = this.setSlideIndex.bind(this);\n    this.getNewSlideIndex = this.getNewSlideIndex.bind(this);\n    this.updateDimensions = this.updateDimensions.bind(this);\n    this.runAutomatic = this.runAutomatic.bind(this);\n  }\n\n  getNewSlideIndex(step) {\n    const slideIndex = this.state.slideIndex;\n    const numberSlide = this.props.input.length;\n    let newSlideIndex = slideIndex + step;\n    if (newSlideIndex >= numberSlide) newSlideIndex = 0;else if (newSlideIndex < 0) newSlideIndex = numberSlide - 1;\n    return newSlideIndex;\n  }\n\n  backward() {\n    this.setState({\n      slideIndex: this.getNewSlideIndex(-1)\n    });\n  }\n\n  forward() {\n    this.setState({\n      slideIndex: this.getNewSlideIndex(1)\n    });\n  }\n\n  setSlideIndex(index) {\n    this.setState({\n      slideIndex: index\n    });\n  }\n\n  updateDimensions() {\n    this.containerElm.style.height = `${this.containerElm.offsetWidth / this.ratioWH}px`;\n  }\n\n  runAutomatic() {\n    this.setState({\n      slideIndex: this.getNewSlideIndex(1)\n    });\n  }\n\n  componentDidMount() {\n    this.rootElm = ReactDOM.findDOMNode(this);\n    this.containerElm = this.rootElm.querySelector(\".container\");\n    this.updateDimensions();\n    window.addEventListener(\"resize\", this.updateDimensions);\n\n    if (this.props.mode === \"automatic\") {\n      const timeout = this.props.timeout || 5000;\n      this.automaticInterval = setInterval(() => this.runAutomatic(), Number.parseInt(timeout));\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions);\n    if (this.automaticInterval) clearInterval(this.automaticInterval);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"lp-slideshow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, this.props.input.map((image, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        className: `slide ${this.state.slideIndex === index ? \"active\" : \"\"}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"number-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }\n      }, `${index + 1} / ${this.props.input.length}`), /*#__PURE__*/React.createElement(\"img\", {\n        className: \"image\",\n        src: image.src,\n        alt: image.caption,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"caption-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }\n      }, image.caption));\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"prev\",\n      onClick: this.backward,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, \"\\u276E\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"next\",\n      onClick: this.forward,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, \"\\u276F\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dot-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, this.props.input.map((_, index) => {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        key: index,\n        className: `dot ${this.state.slideIndex === index ? \"active\" : \"\"}`,\n        onClick: () => this.setSlideIndex(index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }\n      });\n    })));\n  }\n\n}\n\nexport default SlideShow;","map":{"version":3,"sources":["C:/Users/Long/Projects/tueminhbookstore/src/components/Common/Header/SlideShow.js"],"names":["React","Component","ReactDOM","SlideShow","constructor","props","state","slideIndex","ratioWHArray","ratio","split","ratioWH","backward","bind","forward","setSlideIndex","getNewSlideIndex","updateDimensions","runAutomatic","step","numberSlide","input","length","newSlideIndex","setState","index","containerElm","style","height","offsetWidth","componentDidMount","rootElm","findDOMNode","querySelector","window","addEventListener","mode","timeout","automaticInterval","setInterval","Number","parseInt","componentWillUnmount","removeEventListener","clearInterval","render","map","image","src","caption","_"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport '../../assets/css/slideShow.css';\r\n\r\nclass SlideShow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state= {\r\n            slideIndex: 0\r\n        };\r\n\r\n    const ratioWHArray = this.props.ratio.split(\":\");\r\n    this.ratioWH = ratioWHArray[0] / ratioWHArray[1];\r\n    \r\n    this.backward = this.backward.bind(this);\r\n    this.forward = this.forward.bind(this);\r\n    this.setSlideIndex = this.setSlideIndex.bind(this);\r\n    this.getNewSlideIndex = this.getNewSlideIndex.bind(this);\r\n    this.updateDimensions = this.updateDimensions.bind(this);\r\n    this.runAutomatic = this.runAutomatic.bind(this);\r\n    }\r\n\r\n    getNewSlideIndex(step) {\r\n        const slideIndex = this.state.slideIndex;\r\n        const numberSlide = this.props.input.length;\r\n        \r\n        let newSlideIndex = slideIndex + step;\r\n        \r\n        if (newSlideIndex >= numberSlide) newSlideIndex = 0;\r\n        else if (newSlideIndex < 0) newSlideIndex = numberSlide - 1;\r\n        \r\n        return newSlideIndex;\r\n    }\r\n        \r\n        \r\n\r\n    backward() {\r\n        this.setState({\r\n            slideIndex: this.getNewSlideIndex(-1)\r\n        });\r\n    }\r\n\r\n    forward() {\r\n        this.setState({\r\n            slideIndex: this.getNewSlideIndex(1)\r\n        });\r\n    }\r\n\r\n    setSlideIndex(index) {\r\n        this.setState({\r\n            slideIndex: index\r\n        })\r\n    }\r\n\r\n    updateDimensions() {\r\n        this.containerElm.style.height \r\n        = `${this.containerElm.offsetWidth / this.ratioWH}px`;\r\n    }\r\n\r\n    runAutomatic() {\r\n        this.setState({\r\n          slideIndex: this.getNewSlideIndex(1)\r\n        });\r\n    }\r\n        \r\n\r\n    componentDidMount() {\r\n        this.rootElm = ReactDOM.findDOMNode(this);\r\n        this.containerElm = this.rootElm.querySelector(\".container\");\r\n\r\n        this.updateDimensions();\r\n        window.addEventListener(\"resize\", this.updateDimensions);\r\n\r\n        if(this.props.mode === \"automatic\") {\r\n            const timeout = this.props.timeout || 5000;\r\n\r\n            this.automaticInterval = setInterval(\r\n                () => this.runAutomatic(),\r\n                Number.parseInt(timeout)\r\n            );\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.updateDimensions);\r\n        if (this.automaticInterval) clearInterval(this.automaticInterval);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"lp-slideshow\">\r\n                <div className=\"container\">\r\n                {\r\n                    this.props.input.map((image, index) => {\r\n                    return (\r\n                        <div\r\n                        key={index}\r\n                        className={\r\n                            `slide ${this.state.slideIndex === index ? \"active\" : \"\"}`\r\n                        }\r\n                        >\r\n                        <div className=\"number-text\">\r\n                            {`${index + 1} / ${this.props.input.length}`}\r\n                        </div>\r\n                        <img className=\"image\" src={image.src} alt={image.caption} />\r\n                        <div className=\"caption-text\">{image.caption}</div>\r\n                        </div>\r\n                    )\r\n                    })\r\n                }\r\n\r\n                <span className=\"prev\" onClick={this.backward}>❮</span>\r\n                <span className=\"next\" onClick={this.forward}>❯</span>\r\n                </div>\r\n\r\n                <div className=\"dot-container\">\r\n                {\r\n                    this.props.input.map((_, index) => {\r\n                    return (\r\n                        <span\r\n                        key={index}\r\n                        className={\r\n                            `dot ${this.state.slideIndex === index ? \"active\" : \"\"}`\r\n                        }\r\n                        onClick={() => this.setSlideIndex(index)}\r\n                        >\r\n                        </span>\r\n                    )\r\n                    })\r\n                }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SlideShow;"]},"metadata":{},"sourceType":"module"}