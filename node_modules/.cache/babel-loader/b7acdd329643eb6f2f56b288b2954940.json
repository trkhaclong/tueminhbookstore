{"ast":null,"code":"import axios from 'axios';\nconst host = 'http://localhost:8080';\nconst API = {\n  makeFileURL: (url, token) => {\n    return host + url + \"?access_token=\" + token;\n  },\n  login: (email, pass, success) => {\n    axios.post(`${host}/api/users/login`, {\n      email: email,\n      password: pass\n    }).then(res => {\n      success(res);\n    });\n  },\n  getUsers: (token, success) => {\n    axios.get(`${host}/api/users?access_token=${token}`).then(res => {\n      success(res);\n    });\n  },\n  getPostCount: success => {\n    axios.get(`${host}/api/Posts/count`).then(res => {\n      success(res);\n    });\n  },\n  getPosts: (token, success) => {\n    axios.get(`${host}/api/Posts?access_token=${token}`).then(res => {\n      success(res);\n    });\n  },\n  getSitePosts: (skip, success) => {\n    axios.get(`${host}/api/Posts`, {\n      params: {\n        filter: {\n          skip: skip,\n          limit: 10,\n          include: 'PostImage',\n          fields: {\n            id: true,\n            title: true,\n            slug: true,\n            content: false\n          }\n        }\n      }\n    }).then(res => {\n      success(res);\n    });\n  },\n  addPost: (post, token, success) => {\n    axios.post(`${host}/api/Posts?access_token=${token}`, post).then(res => {\n      success(res);\n    });\n  },\n  updatePost: (post, token, success) => {\n    axios.patch(`${host}/api/Posts/${post.id}?access_token=${token}`, post).then(res => {\n      success(res);\n    });\n  },\n  getSinglePost: (id, token, success) => {\n    axios.get(`${host}/api/Posts/${id}?access_token=${token}`, {\n      params: {\n        filter: {\n          include: 'PostImage'\n        }\n      }\n    }).then(res => {\n      success(res);\n    });\n  },\n  uploadImage: (data, token, postId, userId, success) => {\n    axios.post(`${host}/api/PostImages/upload?post_id=${postId}&access_token=${token}&user_id=${userId}`, data).then(res => {\n      success(res);\n    });\n  },\n  getProductByPublishing: (publishing, token, success) => {\n    axios.get(`${host}/api/Products/findOne?access_token=${token}`, {\n      params: {\n        filter: {\n          where: {\n            publishing: publishing\n          }\n        }\n      }\n    }).then(res => {\n      success(res);\n    });\n  },\n  getProductCount: success => {\n    axios.get(`${host}/api/Products/count`).then(res => {\n      success(res);\n    });\n  },\n  getProducts: (token, success) => {\n    axios.get(`${host}/api/Products?access_token=${token}`).then(res => {\n      success(res);\n    });\n  },\n  getSiteProducts: (skip, success) => {\n    axios.get(`${host}/api/Products`, {\n      params: {\n        filter: {\n          skip: skip,\n          limit: 10,\n          include: 'ProductImage',\n          fields: {\n            id: true,\n            name: true,\n            newPrice: true,\n            description: false\n          }\n        }\n      }\n    }).then(res => {\n      success(res);\n    });\n  },\n  addProduct: (product, token, success) => {\n    axios.post(`${host}/api/Products?access_token=${token}`, post).then(res => {\n      success(res);\n    });\n  },\n  updateProduct: (post, token, success) => {\n    axios.patch(`${host}/api/Products/${post.id}?access_token=${token}`, post).then(res => {\n      success(res);\n    });\n  },\n  getSingleProduct: (id, token, success) => {\n    axios.get(`${host}/api/Products/${id}?access_token=${token}`, {\n      params: {\n        filter: {\n          include: 'ProductImage'\n        }\n      }\n    }).then(res => {\n      success(res);\n    });\n  },\n  uploadProductImage: (data, token, productId, userId, success) => {\n    axios.post(`${host}/api/ProductImages/upload?product_id=${productId}&access_token=${token}&user_id=${userId}`, data).then(res => {\n      success(res);\n    });\n  }\n};\nexport default API;","map":{"version":3,"sources":["/mnt/c/Users/Dep Trai/Projects/tueminhbookstore/src/utils/api.js"],"names":["axios","host","API","makeFileURL","url","token","login","email","pass","success","post","password","then","res","getUsers","get","getPostCount","getPosts","getSitePosts","skip","params","filter","limit","include","fields","id","title","slug","content","addPost","updatePost","patch","getSinglePost","uploadImage","data","postId","userId","getProductByPublishing","publishing","where","getProductCount","getProducts","getSiteProducts","name","newPrice","description","addProduct","product","updateProduct","getSingleProduct","uploadProductImage","productId"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\n\r\nconst host = 'http://localhost:8080';\r\nconst API = {\r\n    makeFileURL: (url, token) => {\r\n        return host + url + \"?access_token=\" + token;\r\n    },\r\n    login: (email, pass, success) => {\r\n        axios.post(`${host}/api/users/login`, {email: email, password:pass})\r\n        .then(res => {\r\n            success(res);\r\n        });\r\n    },\r\n    getUsers: (token, success) => {\r\n        axios.get(`${host}/api/users?access_token=${token}`)\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getPostCount: (success) => {\r\n        axios.get(`${host}/api/Posts/count`)\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getPosts: (token, success) => {\r\n        axios.get(`${host}/api/Posts?access_token=${token}`)\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getSitePosts: (skip, success) => {\r\n        axios.get(`${host}/api/Posts`, {\r\n            params: {\r\n                filter: {\r\n                    skip: skip,\r\n                    limit: 10,\r\n                    include: 'PostImage',\r\n                    fields: {\r\n                        id: true,\r\n                        title: true,\r\n                        slug: true,\r\n                        content: false\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    addPost: (post,token,success) => {\r\n        axios.post(`${host}/api/Posts?access_token=${token}`, post)\r\n        .then(res => {\r\n            success(res);\r\n        });\r\n    },\r\n    updatePost: (post, token, success) => {\r\n        axios.patch(`${host}/api/Posts/${post.id}?access_token=${token}`, post)\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getSinglePost: (id, token, success) => {\r\n        axios.get(`${host}/api/Posts/${id}?access_token=${token}`, {\r\n            params: {\r\n                filter: {\r\n                    include: 'PostImage'\r\n                }\r\n            }\r\n        })\r\n        .then(res => {\r\n            success(res);\r\n        });\r\n    },\r\n    uploadImage: (data, token, postId, userId, success) => {\r\n        axios.post(`${host}/api/PostImages/upload?post_id=${postId}&access_token=${token}&user_id=${userId}`, data)\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getProductByPublishing: (publishing, token, success) => {\r\n        axios.get(`${host}/api/Products/findOne?access_token=${token}`, {\r\n            params: {\r\n                filter: {\r\n                    where: {publishing: publishing}\r\n                }\r\n            }\r\n        }).then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getProductCount: (success) => {\r\n        axios.get(`${host}/api/Products/count`)\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getProducts: (token, success) => {\r\n        axios.get(`${host}/api/Products?access_token=${token}`)\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getSiteProducts: (skip, success) => {\r\n        axios.get(`${host}/api/Products`, {\r\n            params: {\r\n                filter: {\r\n                    skip: skip,\r\n                    limit: 10,\r\n                    include: 'ProductImage',\r\n                    fields: {\r\n                        id: true,\r\n                        name: true,\r\n                        newPrice: true,\r\n                        description: false\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    addProduct: (product,token,success) => {\r\n        axios.post(`${host}/api/Products?access_token=${token}`, post)\r\n        .then(res => {\r\n            success(res);\r\n        });\r\n    },\r\n    updateProduct: (post, token, success) => {\r\n        axios.patch(`${host}/api/Products/${post.id}?access_token=${token}`, post)\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getSingleProduct: (id, token, success) => {\r\n        axios.get(`${host}/api/Products/${id}?access_token=${token}`, {\r\n            params: {\r\n                filter: {\r\n                    include: 'ProductImage'\r\n                }\r\n            }\r\n        })\r\n        .then(res => {\r\n            success(res);\r\n        });\r\n    },\r\n    uploadProductImage: (data, token, productId, userId, success) => {\r\n        axios.post(`${host}/api/ProductImages/upload?product_id=${productId}&access_token=${token}&user_id=${userId}`, data)\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    }\r\n}\r\n\r\nexport default API;"]},"metadata":{},"sourceType":"module"}