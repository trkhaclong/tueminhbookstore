{"ast":null,"code":"const defaultState = {\n  products: [],\n  product: {},\n  productCount: 0,\n  addedProducts: [],\n  total: 0\n};\n\nconst site = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'GOT_PRODUCT_COUNT':\n      return { ...state,\n        productCount: action.payload\n      };\n\n    case 'GOT_SITE_PRODUCTS':\n      return { ...state,\n        products: action.skip ? state.products.concat(action.payload) : action.payload\n      };\n\n    case 'GOT_CATE_PRODUCTS':\n      return { ...state,\n        products: action.skip ? state.products.concat(action.payload) : action.payload\n      };\n\n    case 'GOT_CATE1_PRODUCTS':\n      return { ...state,\n        products: action.skip ? state.products.concat(action.payload) : action.payload\n      };\n\n    case 'GOT_CATE2_PRODUCTS':\n      return { ...state,\n        products: action.skip ? state.products.concat(action.payload) : action.payload\n      };\n\n    case 'GOT_CATE3_PRODUCTS':\n      return { ...state,\n        products: action.skip ? state.products.concat(action.payload) : action.payload\n      };\n\n    case 'GOT_HOME_PRODUCTS':\n      return { ...state,\n        products: action.skip ? state.products.concat(action.payload) : action.payload\n      };\n\n    case 'SET_DEFAULT_CATE_DATA':\n      return { ...state,\n        products: action.payload\n      };\n\n    case 'SET_DEFAULT_PRODUCT_DATA':\n      return { ...state,\n        product: action.payload\n      };\n\n    case 'SET_FULL_PRODUCT_DATA':\n      {\n        return { ...state,\n          product: { ...state.product,\n            ...action.payload\n          }\n        };\n      }\n\n    case 'ADDED_COMMENT':\n      {\n        return { ...state,\n          product: { ...state.product,\n            Comment: state.product.Comment.concat(action.payload)\n          }\n        };\n      }\n\n    case 'ADD_TO_CART':\n      {\n        let addedProduct = action.payload;\n        {\n          let existed_product = state.addedProducts.find(product => addedProduct.id === product.id);\n\n          if (existed_product) {\n            addedProduct.quantity += 1;\n            return { ...state,\n              total: state.total + addedProduct.newPrice\n            };\n          } else {\n            addedProduct.quantity = 1;\n            let newToTal = state.total + addedProduct.newPrice;\n            return { ...state,\n              addedProducts: [...state.addedProducts, addedProduct],\n              total: newToTal\n            };\n          }\n        }\n      }\n\n    case 'REMOVE_PRODUCT':\n      {\n        let itemToRemove = state.addedProducts.find(product => action.payload === product.id);\n        let new_products = state.addedProducts.filter(product => action.payload !== product.id);\n        let newTotal = state.total - itemToRemove.newPrice * itemToRemove.quantity;\n        return { ...state,\n          addedProducts: new_products,\n          total: newTotal\n        };\n      }\n\n    case 'ADD_QUANTITY':\n      {\n        let addedProduct = state.addedProducts.find(product => action.payload === product.id);\n        addedProduct.quantity += 1;\n        let newTotal = state.total + addedProduct.newPrice;\n        return { ...state,\n          total: newTotal\n        };\n      }\n\n    case 'SUB_QUANTITY':\n      {\n        let addedProduct = state.addedProducts.find(product => action.payload === product.id);\n        addedProduct.quantity -= 1;\n        let newTotal = state.total - addedProduct.newPrice;\n        return { ...state,\n          total: newTotal\n        };\n      }\n\n    case 'SET_PAYMENT':\n      {\n        return { ...state,\n          total: 0,\n          addedProducts: []\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default site;","map":{"version":3,"sources":["/mnt/c/Users/Long/Projects/tueminhbookstore/src/store/reducers/siteReducers.js"],"names":["defaultState","products","product","productCount","addedProducts","total","site","state","action","type","payload","skip","concat","Comment","addedProduct","existed_product","find","id","quantity","newPrice","newToTal","itemToRemove","new_products","filter","newTotal"],"mappings":"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","sourcesContent":["\r\nconst defaultState = {\r\n    products: [],\r\n    product: {},\r\n    productCount: 0,\r\n    addedProducts: [],\r\n    total: 0\r\n}\r\n\r\nconst site = (state = defaultState, action) => {\r\n    switch(action.type){\r\n        case 'GOT_PRODUCT_COUNT':\r\n            return {\r\n                ...state,\r\n                productCount: action.payload\r\n            }\r\n        case 'GOT_SITE_PRODUCTS':\r\n            return {\r\n                ...state,\r\n                products: action.skip ? state.products.concat(action.payload) : action.payload\r\n            }\r\n        case 'GOT_CATE_PRODUCTS':\r\n            return {\r\n                ...state,\r\n                products: action.skip ? state.products.concat(action.payload) : action.payload\r\n            }\r\n        case 'GOT_CATE1_PRODUCTS':\r\n            return {\r\n                ...state,\r\n                products: action.skip ? state.products.concat(action.payload) : action.payload\r\n            }\r\n        case 'GOT_CATE2_PRODUCTS':\r\n            return {\r\n                ...state,\r\n                products: action.skip ? state.products.concat(action.payload) : action.payload\r\n            }\r\n        case 'GOT_CATE3_PRODUCTS':\r\n            return {\r\n                ...state,\r\n                products: action.skip ? state.products.concat(action.payload) : action.payload\r\n            }\r\n        case 'GOT_HOME_PRODUCTS':\r\n            return {\r\n                ...state,\r\n                products: action.skip ? state.products.concat(action.payload) : action.payload\r\n            }\r\n        case 'SET_DEFAULT_CATE_DATA':\r\n            return {\r\n                ...state,\r\n                products: action.payload\r\n            }\r\n        case 'SET_DEFAULT_PRODUCT_DATA':\r\n            return {\r\n                ...state,\r\n                product: action.payload\r\n            }\r\n        case 'SET_FULL_PRODUCT_DATA': {\r\n            return {\r\n                ...state,\r\n                product: {\r\n                    ...state.product,\r\n                    ...action.payload\r\n                }\r\n            }\r\n        }\r\n        case 'ADDED_COMMENT': {\r\n            return {\r\n                ...state,\r\n                product: {\r\n                    ...state.product,\r\n                    Comment: state.product.Comment.concat(action.payload)\r\n                }\r\n            }\r\n        }\r\n        case 'ADD_TO_CART':{\r\n            let addedProduct = action.payload\r\n            {\r\n                let existed_product = state.addedProducts.find(product => addedProduct.id === product.id)\r\n                if(existed_product){\r\n                    addedProduct.quantity += 1\r\n                    return{\r\n                        ...state,\r\n                        total: state.total + addedProduct.newPrice\r\n                    }\r\n                }else{\r\n                    addedProduct.quantity = 1;\r\n                    \r\n                    let newToTal = state.total + addedProduct.newPrice\r\n                    return{\r\n                        ...state,\r\n                        addedProducts: [...state.addedProducts, addedProduct],\r\n                        total: newToTal\r\n                    }\r\n\r\n                }\r\n\r\n                \r\n            }\r\n        }\r\n        case 'REMOVE_PRODUCT': {\r\n            let itemToRemove = state.addedProducts.find(product => action.payload === product.id)\r\n            let new_products = state.addedProducts.filter(product => action.payload !== product.id)\r\n\r\n            let newTotal = state.total - (itemToRemove.newPrice * itemToRemove.quantity)\r\n\r\n        \r\n            return{\r\n                ...state,\r\n                addedProducts: new_products,\r\n                total: newTotal\r\n            }\r\n        }\r\n        case 'ADD_QUANTITY': {\r\n            let addedProduct = state.addedProducts.find(product => action.payload === product.id)\r\n            \r\n            addedProduct.quantity += 1\r\n            let newTotal = state.total + addedProduct.newPrice\r\n            return {\r\n                ...state,\r\n                total: newTotal\r\n            }\r\n        }\r\n        case 'SUB_QUANTITY': {\r\n            let addedProduct = state.addedProducts.find(product => action.payload === product.id)\r\n\r\n            addedProduct.quantity -=1\r\n            let newTotal = state.total - addedProduct.newPrice\r\n            return {\r\n                ...state,\r\n                total: newTotal\r\n            }\r\n        }\r\n        case 'SET_PAYMENT': {\r\n            return {\r\n                ...state,\r\n                total: 0,\r\n                addedProducts: [],\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default site;"]},"metadata":{},"sourceType":"module"}