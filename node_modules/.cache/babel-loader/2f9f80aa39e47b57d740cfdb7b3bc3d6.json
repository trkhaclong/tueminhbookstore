{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Dep Trai/Projects/tueminhbookstore/src/components/Common/CommentBuilder.js\";\nimport React, { Component } from 'react';\nimport * as SiteActions from '../../store/actions/siteActions';\nimport { connect } from 'react-redux';\nimport { withFormik } from 'formik';\nimport * as Yup from 'yup';\n\nclass CommentBuilder extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }\n    }, \"Commnet\");\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  site: state.site\n});\n\nconst mapDispatchToProps = dispatch => ({\n  postComment: (comment, token) => {\n    dispatch(SiteActions.postComment(comment, token));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withFormik({\n  mapPropsToValues: () => ({\n    email: '',\n    password: ''\n  }),\n  validationSchema: Yup.object().shape({\n    email: Yup.string().email('Email is invalid.').required('Login with email.'),\n    password: Yup.string().required('Enter Password')\n  }),\n  handleSubmit: (values, {\n    setSubmitting\n  }, login) => {\n    console.log(\"Login attempt\", values);\n    login(values.email, values.password);\n  }\n})(CommentBuilder));","map":{"version":3,"sources":["/mnt/c/Users/Dep Trai/Projects/tueminhbookstore/src/components/Common/CommentBuilder.js"],"names":["React","Component","SiteActions","connect","withFormik","Yup","CommentBuilder","render","mapStateToProps","state","auth","site","mapDispatchToProps","dispatch","postComment","comment","token","mapPropsToValues","email","password","validationSchema","object","shape","string","required","handleSubmit","values","setSubmitting","login","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,KAAKC,WAAZ,MAA6B,iCAA7B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,QAAyB,QAAzB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;AAEA,MAAMC,cAAN,SAA6BL,SAA7B,CAAuC;AACnCM,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ;AAGH;;AALkC;;AAOvC,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9BC,EAAAA,IAAI,EAAED,KAAK,CAACC,IADkB;AAE9BC,EAAAA,IAAI,EAAEF,KAAK,CAACE;AAFkB,CAAL,CAA7B;;AAKA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACpCC,EAAAA,WAAW,EAAE,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAC7BH,IAAAA,QAAQ,CAACX,WAAW,CAACY,WAAZ,CAAwBC,OAAxB,EAAiCC,KAAjC,CAAD,CAAR;AACH;AAHmC,CAAL,CAAnC;;AAMA,eAAeb,OAAO,CAClBK,eADkB,EAElBI,kBAFkB,CAAP,CAGbR,UAAU,CAAC;AACTa,EAAAA,gBAAgB,EAAE,OAAO;AACrBC,IAAAA,KAAK,EAAE,EADc;AAErBC,IAAAA,QAAQ,EAAE;AAFW,GAAP,CADT;AAKTC,EAAAA,gBAAgB,EAAEf,GAAG,CAACgB,MAAJ,GAAaC,KAAb,CAAmB;AACjCJ,IAAAA,KAAK,EAAEb,GAAG,CAACkB,MAAJ,GAAaL,KAAb,CAAmB,mBAAnB,EAAwCM,QAAxC,CAAiD,mBAAjD,CAD0B;AAEjCL,IAAAA,QAAQ,EAAEd,GAAG,CAACkB,MAAJ,GAAaC,QAAb,CAAsB,gBAAtB;AAFuB,GAAnB,CALT;AAUTC,EAAAA,YAAY,EAAE,CAACC,MAAD,EAAS;AAACC,IAAAA;AAAD,GAAT,EAA0BC,KAA1B,KAAoC;AAC9CC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BJ,MAA7B;AACAE,IAAAA,KAAK,CAACF,MAAM,CAACR,KAAR,EAAeQ,MAAM,CAACP,QAAtB,CAAL;AACH;AAbQ,CAAD,CAAV,CAcCb,cAdD,CAHa,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport * as SiteActions from '../../store/actions/siteActions';\r\nimport {connect} from 'react-redux';\r\nimport {withFormik} from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nclass CommentBuilder extends Component {\r\n    render(){\r\n        return(\r\n            <h1>Commnet</h1>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    site: state.site\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    postComment: (comment, token) => {\r\n        dispatch(SiteActions.postComment(comment, token));\r\n    }\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withFormik({\r\n    mapPropsToValues: () => ({\r\n        email: '',\r\n        password: ''\r\n    }),\r\n    validationSchema: Yup.object().shape({\r\n        email: Yup.string().email('Email is invalid.').required('Login with email.'),\r\n        password: Yup.string().required('Enter Password')\r\n     }),\r\n\r\n    handleSubmit: (values, {setSubmitting}, login) => {\r\n        console.log(\"Login attempt\", values);\r\n        login(values.email, values.password);\r\n    }\r\n})(CommentBuilder));"]},"metadata":{},"sourceType":"module"}