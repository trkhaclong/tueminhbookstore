{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Dep Trai/Projects/tueminhbookstore/src/components/Common/CommentBuilder.js\";\nimport React, { Component } from 'react';\nimport * as SiteActions from '../../store/actions/siteActions';\nimport { connect } from 'react-redux';\nimport { withFormik } from 'formik';\nimport * as Yup from 'yup';\nimport Field from './Field';\nconst fields = [{\n  name: 'content',\n  type: 'text',\n  placeholder: 'Viet binh luan ....'\n}];\n\nclass CommentBuilder extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        this.props.postComment();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Field, Object.assign({}, fields[0], {\n      value: this.props.values[fields[0].name],\n      name: fields[0].name,\n      onChange: this.props.handleChange,\n      onBlur: this.props.handleBlur,\n      touched: this.props.touched[fields[0].name],\n      errors: this.props.errors[fields[0].name],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  site: state.site\n});\n\nconst mapDispatchToProps = dispatch => ({\n  postComment: (comment, token) => {\n    dispatch(SiteActions.postComment(comment, token));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withFormik({\n  mapPropsToValues: () => ({\n    email: '',\n    password: ''\n  }),\n  validationSchema: Yup.object().shape({\n    email: Yup.string().email('Email is invalid.').required('Login with email.'),\n    password: Yup.string().required('Enter Password')\n  }),\n  handleSubmit: (values, {\n    setSubmitting\n  }, login) => {\n    console.log(\"Login attempt\", values);\n    login(values.email, values.password);\n  }\n})(CommentBuilder));","map":{"version":3,"sources":["/mnt/c/Users/Dep Trai/Projects/tueminhbookstore/src/components/Common/CommentBuilder.js"],"names":["React","Component","SiteActions","connect","withFormik","Yup","Field","fields","name","type","placeholder","CommentBuilder","render","e","preventDefault","props","postComment","values","handleChange","handleBlur","touched","errors","mapStateToProps","state","auth","site","mapDispatchToProps","dispatch","comment","token","mapPropsToValues","email","password","validationSchema","object","shape","string","required","handleSubmit","setSubmitting","login","console","log"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport * as SiteActions from '../../store/actions/siteActions';\r\nimport {connect} from 'react-redux';\r\nimport {withFormik} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Field from './Field';\r\n\r\nconst fields= [\r\n    {name: 'content',type: 'text', placeholder: 'Viet binh luan ....'},\r\n]\r\n\r\nclass CommentBuilder extends Component {\r\n    render(){\r\n        return(\r\n            <div>\r\n                <form onSubmit={e => {\r\n                    e.preventDefault();\r\n                    this.props.postComment();\r\n                }}>\r\n                    <Field   \r\n                        {...fields[0]}\r\n                        value={this.props.values[fields[0].name]}\r\n                        name={fields[0].name}\r\n                        onChange={this.props.handleChange}\r\n                        onBlur={this.props.handleBlur}\r\n                        touched={(this.props.touched[fields[0].name])}\r\n                        errors={this.props.errors[fields[0].name]}\r\n                    />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    site: state.site\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    postComment: (comment, token) => {\r\n        dispatch(SiteActions.postComment(comment, token));\r\n    }\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withFormik({\r\n    mapPropsToValues: () => ({\r\n        email: '',\r\n        password: ''\r\n    }),\r\n    validationSchema: Yup.object().shape({\r\n        email: Yup.string().email('Email is invalid.').required('Login with email.'),\r\n        password: Yup.string().required('Enter Password')\r\n     }),\r\n\r\n    handleSubmit: (values, {setSubmitting}, login) => {\r\n        console.log(\"Login attempt\", values);\r\n        login(values.email, values.password);\r\n    }\r\n})(CommentBuilder));"]},"metadata":{},"sourceType":"module"}