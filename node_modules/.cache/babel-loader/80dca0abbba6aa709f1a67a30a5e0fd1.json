{"ast":null,"code":"function _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nexport function toggle(collection, value) {\n  var arr = _toConsumableArray(collection);\n\n  var index = arr.findIndex(function (i) {\n    return i === value;\n  });\n\n  if (index === -1) {\n    arr.push(value);\n  } else {\n    arr.splice(index, 1);\n  }\n\n  return arr;\n}","map":{"version":3,"sources":["/mnt/c/Users/Long/Projects/tueminhbookstore/node_modules/formik-material-fields/es/utils/functions.js"],"names":["_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","TypeError","iter","Symbol","iterator","Object","prototype","toString","call","Array","from","isArray","i","arr2","length","toggle","collection","value","index","findIndex","push","splice"],"mappings":"AAAA,SAASA,kBAAT,CAA4BC,GAA5B,EAAiC;AAAE,SAAOC,kBAAkB,CAACD,GAAD,CAAlB,IAA2BE,gBAAgB,CAACF,GAAD,CAA3C,IAAoDG,kBAAkB,EAA7E;AAAkF;;AAErH,SAASA,kBAAT,GAA8B;AAAE,QAAM,IAAIC,SAAJ,CAAc,iDAAd,CAAN;AAAyE;;AAEzG,SAASF,gBAAT,CAA0BG,IAA1B,EAAgC;AAAE,MAAIC,MAAM,CAACC,QAAP,IAAmBC,MAAM,CAACH,IAAD,CAAzB,IAAmCG,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BN,IAA/B,MAAyC,oBAAhF,EAAsG,OAAOO,KAAK,CAACC,IAAN,CAAWR,IAAX,CAAP;AAA0B;;AAElK,SAASJ,kBAAT,CAA4BD,GAA5B,EAAiC;AAAE,MAAIY,KAAK,CAACE,OAAN,CAAcd,GAAd,CAAJ,EAAwB;AAAE,SAAK,IAAIe,CAAC,GAAG,CAAR,EAAWC,IAAI,GAAG,IAAIJ,KAAJ,CAAUZ,GAAG,CAACiB,MAAd,CAAvB,EAA8CF,CAAC,GAAGf,GAAG,CAACiB,MAAtD,EAA8DF,CAAC,EAA/D,EAAmE;AAAEC,MAAAA,IAAI,CAACD,CAAD,CAAJ,GAAUf,GAAG,CAACe,CAAD,CAAb;AAAmB;;AAAC,WAAOC,IAAP;AAAc;AAAE;;AAEtK,OAAO,SAASE,MAAT,CAAgBC,UAAhB,EAA4BC,KAA5B,EAAmC;AACxC,MAAIpB,GAAG,GAAGD,kBAAkB,CAACoB,UAAD,CAA5B;;AAEA,MAAIE,KAAK,GAAGrB,GAAG,CAACsB,SAAJ,CAAc,UAAUP,CAAV,EAAa;AACrC,WAAOA,CAAC,KAAKK,KAAb;AACD,GAFW,CAAZ;;AAIA,MAAIC,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChBrB,IAAAA,GAAG,CAACuB,IAAJ,CAASH,KAAT;AACD,GAFD,MAEO;AACLpB,IAAAA,GAAG,CAACwB,MAAJ,CAAWH,KAAX,EAAkB,CAAlB;AACD;;AAED,SAAOrB,GAAP;AACD","sourcesContent":["function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nexport function toggle(collection, value) {\n  var arr = _toConsumableArray(collection);\n\n  var index = arr.findIndex(function (i) {\n    return i === value;\n  });\n\n  if (index === -1) {\n    arr.push(value);\n  } else {\n    arr.splice(index, 1);\n  }\n\n  return arr;\n}"]},"metadata":{},"sourceType":"module"}