{"ast":null,"code":"import API from '../../utils/api';\nexport const getUsers = token => {\n  return dispatch => {\n    API.getUsers(token, res => {\n      dispatch({\n        type: 'GOT_USERS',\n        payload: res.data\n      });\n    });\n  };\n};\nexport const getProducts = token => {\n  return dispatch => {\n    API.getProducts(token, res => {\n      dispatch({\n        type: 'GOT_PRODUCTS',\n        payload: res.data\n      });\n    });\n  };\n};\nexport const addProduct = (post, token) => {\n  return dispatch => {\n    API.addProduct(post, token, res => {\n      dispatch({\n        type: 'PRODUCT_ADDED',\n        payload: res.data\n      });\n    });\n  };\n};\nexport const updateProduct = (post, token) => {\n  return dispatch => {\n    API.updateProduct(post, token, res => {\n      dispatch({\n        type: 'UPDATED_PRODUCT',\n        payload: res.data\n      });\n    });\n  };\n};\nexport const getSingleProduct = (id, token) => {\n  return dispatch => {\n    API.getSingleProduct(id, token, res => {\n      dispatch({\n        type: 'GOT_SINGLE_PRODUCT',\n        payload: res.data\n      });\n    });\n  };\n};\nexport const uploadProductImage = (data, token, productId, userId) => {\n  return dispatch => {\n    API.uploadProductImage(data, token, productId, userId, res => {\n      dispatch({\n        type: 'UPLOAD_PRODUCT_IMAGE',\n        payload: res.data\n      });\n    });\n  };\n};\nexport const getPosts = token => {\n  return dispatch => {\n    API.getPosts(token, res => {\n      dispatch({\n        type: 'GOT_POSTS',\n        payload: res.data\n      });\n    });\n  };\n};\nexport const addPost = (post, token) => {\n  return dispatch => {\n    API.addPost(post, token, res => {\n      dispatch({\n        type: 'POST_ADDED',\n        payload: res.data\n      });\n    });\n  };\n};\nexport const updatePost = (post, token) => {\n  return dispatch => {\n    API.updatePost(post, token, res => {\n      dispatch({\n        type: 'UPDATED_POST',\n        payload: res.data\n      });\n    });\n  };\n};\nexport const getSinglePost = (id, token) => {\n  return dispatch => {\n    API.getSinglePost(id, token, res => {\n      dispatch({\n        type: 'GOT_SINGLE_POST',\n        payload: res.data\n      });\n    });\n  };\n};\nexport const uploadImage = (data, token, postId, userId) => {\n  return dispatch => {\n    API.uploadImage(data, token, postId, userId, res => {\n      dispatch({\n        type: 'UPLOAD_IMAGE',\n        payload: res.data\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/mnt/c/Users/Dep Trai/Projects/tueminhbookstore/src/store/actions/adminActions.js"],"names":["API","getUsers","token","dispatch","res","type","payload","data","getProducts","addProduct","post","updateProduct","getSingleProduct","id","uploadProductImage","productId","userId","getPosts","addPost","updatePost","getSinglePost","uploadImage","postId"],"mappings":"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","sourcesContent":["import API from '../../utils/api';\r\n\r\nexport const getUsers = (token) => {\r\n    return (dispatch) => {\r\n        API.getUsers(token, res => {\r\n            dispatch({\r\n                type: 'GOT_USERS',\r\n                payload: res.data\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const getProducts = (token) => {\r\n    return dispatch => {\r\n        API.getProducts(token, res => {\r\n            dispatch({\r\n                type: 'GOT_PRODUCTS',\r\n                payload: res.data\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const addProduct = (post, token) => {\r\n    return dispatch => {\r\n        API.addProduct(post, token, res => {\r\n            dispatch({\r\n                type: 'PRODUCT_ADDED',\r\n                payload: res.data\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateProduct = (post, token) => {\r\n    return dispatch => {\r\n        API.updateProduct(post, token, res => {\r\n            dispatch({\r\n                type: 'UPDATED_PRODUCT',\r\n                payload: res.data\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const getSingleProduct = (id , token) => {\r\n    return dispatch => {\r\n        API.getSingleProduct(id, token, res => {\r\n            dispatch({ \r\n                type: 'GOT_SINGLE_PRODUCT',\r\n                payload: res.data\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const uploadProductImage = (data, token, productId, userId) => {\r\n    return dispatch => {\r\n        API.uploadProductImage(data, token, productId, userId, res => {\r\n            dispatch({\r\n                type: 'UPLOAD_PRODUCT_IMAGE',\r\n                payload: res.data\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const getPosts = (token) => {\r\n    return dispatch => {\r\n        API.getPosts(token, res => {\r\n            dispatch({\r\n                type: 'GOT_POSTS',\r\n                payload: res.data\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const addPost = (post, token) => {\r\n    return dispatch => {\r\n        API.addPost(post, token, res => {\r\n            dispatch({\r\n                type: 'POST_ADDED',\r\n                payload: res.data\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const updatePost = (post, token) => {\r\n    return dispatch => {\r\n        API.updatePost(post, token, res => {\r\n            dispatch({\r\n                type: 'UPDATED_POST',\r\n                payload: res.data\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const getSinglePost = (id , token) => {\r\n    return dispatch => {\r\n        API.getSinglePost(id, token, res => {\r\n            dispatch({ \r\n                type: 'GOT_SINGLE_POST',\r\n                payload: res.data\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const uploadImage = (data, token, postId, userId) => {\r\n    return dispatch => {\r\n        API.uploadImage(data, token, postId, userId, res => {\r\n            dispatch({\r\n                type: 'UPLOAD_IMAGE',\r\n                payload: res.data\r\n            })\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}