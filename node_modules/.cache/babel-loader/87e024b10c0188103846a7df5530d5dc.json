{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Dep Trai/Projects/tueminhbookstore/src/components/Pages/Admin/AddPost.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport * as AdminActions from '../../../store/actions/adminActions';\nimport Paper from '@material-ui/core/Paper';\nimport { withFormik, Field, Form } from 'formik';\nimport { FormikTextField, FormikSelectField } from 'formik-material-fields';\nimport Button from '@material-ui/core/Button';\nimport SaveIcon from '@material-ui/icons/Save';\nimport ImageIcon from '@material-ui/icons/Image';\nimport { withRouter } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport API from '../../../utils/api';\n/* global $ */\n\nconst styles = theme => ({\n  container: {\n    margin: theme.spacing(3),\n    display: 'flex',\n    flexDirection: 'row wrap',\n    width: '100%'\n  },\n  Save: {\n    marginBottom: theme.spacing(2)\n  },\n  formControl: {\n    margin: theme.spacing()\n  },\n  leftSide: {\n    flex: 2,\n    height: '100%',\n    margin: theme.spacing(1),\n    padding: theme.spacing(3)\n  },\n  rightSide: {\n    flex: 1,\n    height: '100%',\n    margin: theme.spacing(1),\n    padding: theme.spacing(3)\n  }\n});\n\nclass AddPost extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.uploadImage = e => {\n      const data = new FormData();\n      data.append('file', e.target.files[0], new Date().getTime().toString() + e.target.files[0].name);\n      this.props.uploadImage(data, this.props.auth.token, this.props.admin.post.postId, this.props.auth.user.userId);\n    };\n  }\n\n  componentDidUpdate(props, state) {\n    if (this.props.match.params.view === 'add' && this.props.admin.posts.filter(p => p.title === this.props.values.title).length > 0) {\n      const post = this.props.admin.posts.filter(p => p.title === this.props.values.title)[0];\n      this.props.history.push('/admin/posts/edit/' + post.dispatch);\n    }\n\n    if (this.props.admin.post.id != props.admin.post.id) {\n      // when redux state changes post in admin reducer\n      this.props.setValues(this.props.admin.post);\n    }\n  }\n\n  componentDidMount(props, state) {\n    if (this.props.match.params.view === 'edit' && this.props.match.params.id) {\n      this.props.getSinglePost(this.props.match.params.id, this.props.auth.token);\n    }\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      className: classes.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      className: classes.leftSide,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormikTextField, {\n      name: \"title\",\n      label: \"Title\",\n      margin: \"normal\",\n      onChange: e => this.props.setFieldValue('slug', e.target.value.toLowerCase().replace(/ /g, '_')),\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(FormikTextField, {\n      name: \"slug\",\n      label: \"Slug\",\n      margin: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(FormikTextField, {\n      name: \"content\",\n      label: \"Content\",\n      margin: \"normal\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Paper, {\n      className: classes.rightSide,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormikSelectField, {\n      name: \"status\",\n      label: \"Status\",\n      margin: \"normal\",\n      options: [{\n        label: 'Unpublished',\n        value: false\n      }, {\n        label: 'Published',\n        value: true\n      }],\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.Save,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: e => {\n        this.props.handleSubmit();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(SaveIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 30\n      }\n    }), \"Save\")), this.props.admin.post.PostImage ? /*#__PURE__*/React.createElement(\"img\", {\n      src: API.makeFileURL(this.props.admin.post.PostImage[0].url, this.props.auth.token),\n      className: \"post-image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 29\n      }\n    }) : null, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: e => {\n        $('.xxFile').trigger('click');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(ImageIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 34\n      }\n    }), \"Upload\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      style: {\n        display: 'none'\n      },\n      className: \"xxFile\",\n      onChange: this.uploadImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 29\n      }\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  admin: state.admin\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addPost: (post, token) => {\n    dispatch(AdminActions.addPost(post, token));\n  },\n  updatePost: (post, token) => {\n    dispatch(AdminActions.updatePost(post, token));\n  },\n  getSinglePost: (id, token) => {\n    dispatch(AdminActions.getSinglePost(id, token));\n  },\n  uploadImage: (data, token, postId, userId) => {\n    dispatch(AdminActions.uploadImage(data, token, postId, userId));\n  }\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(withFormik({\n  mapPropsToValues: props => ({\n    title: props.admin.post.title || '',\n    slug: props.admin.post.slug || '',\n    createdAt: props.admin.post.createdAt || '',\n    status: props.admin.post.status || false,\n    content: props.admin.post.content || ''\n  }),\n  validationSchema: Yup.object().shape({\n    title: Yup.string().required(),\n    slug: Yup.string().required(),\n    content: Yup.string().required()\n  }),\n  handleSubmit: (values, {\n    setSubmitting,\n    props\n  }) => {\n    console.log(\"Saving\", props.addPost);\n\n    if (props.match.params.view === 'edit') {\n      const post = { ...values,\n        id: props.match.params.id\n      };\n      props.updatePost(post, props.auth.token);\n    } else {\n      props.addPost(values, props.auth.token);\n    }\n  }\n})(withStyles(styles)(AddPost))));","map":{"version":3,"sources":["/mnt/c/Users/Dep Trai/Projects/tueminhbookstore/src/components/Pages/Admin/AddPost.js"],"names":["React","Component","connect","withStyles","AdminActions","Paper","withFormik","Field","Form","FormikTextField","FormikSelectField","Button","SaveIcon","ImageIcon","withRouter","Yup","API","styles","theme","container","margin","spacing","display","flexDirection","width","Save","marginBottom","formControl","leftSide","flex","height","padding","rightSide","AddPost","uploadImage","e","data","FormData","append","target","files","Date","getTime","toString","name","props","auth","token","admin","post","postId","user","userId","componentDidUpdate","state","match","params","view","posts","filter","p","title","values","length","history","push","dispatch","id","setValues","componentDidMount","getSinglePost","render","classes","setFieldValue","value","toLowerCase","replace","label","handleSubmit","PostImage","makeFileURL","url","$","trigger","mapStateToProps","mapDispatchToProps","addPost","updatePost","mapPropsToValues","slug","createdAt","status","content","validationSchema","object","shape","string","required","setSubmitting","console","log"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport * as AdminActions from '../../../store/actions/adminActions';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport {withFormik, Field, Form} from 'formik';\r\nimport {FormikTextField, FormikSelectField} from 'formik-material-fields';\r\nimport Button from '@material-ui/core/Button';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\n\r\nimport {withRouter} from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\n\r\nimport API from '../../../utils/api';\r\n\r\n/* global $ */\r\nconst styles = theme => ({\r\n    container: {\r\n        margin: theme.spacing(3),\r\n        display: 'flex',\r\n        flexDirection: 'row wrap',\r\n        width: '100%'\r\n    },\r\n    Save: {\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing()\r\n    },\r\n    leftSide: {\r\n        flex: 2,\r\n        height: '100%',\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(3)\r\n    },\r\n    rightSide: {\r\n        flex: 1,\r\n        height: '100%',\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(3)\r\n    }\r\n});\r\n\r\nclass AddPost extends Component {\r\n\r\n    componentDidUpdate(props, state){\r\n        if(this.props.match.params.view === 'add' && this.props.admin.posts.filter(p => p.title === this.props.values.title).length >0){\r\n            const post = this.props.admin.posts.filter(p => p.title === this.props.values.title)[0];\r\n            this.props.history.push('/admin/posts/edit/' + post.dispatch);\r\n        }\r\n\r\n        if(this.props.admin.post.id != props.admin.post.id){\r\n            // when redux state changes post in admin reducer\r\n            this.props.setValues(this.props.admin.post);\r\n\r\n        }\r\n    }\r\n\r\n    uploadImage = (e) => {\r\n        const data = new FormData();\r\n        data.append('file', e.target.files[0], new Date().getTime().toString() + e.target.files[0].name);\r\n        this.props.uploadImage(data, this.props.auth.token, this.props.admin.post.postId, this.props.auth.user.userId);\r\n    }\r\n\r\n    componentDidMount(props, state){\r\n        if(this.props.match.params.view === 'edit' && this.props.match.params.id){\r\n            this.props.getSinglePost(this.props.match.params.id, this.props.auth.token);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {classes} = this.props;\r\n\r\n        return (\r\n            <div>\r\n                \r\n                <Form className={classes.container}>\r\n                    <Paper className={classes.leftSide}>\r\n                        <FormikTextField\r\n                            name=\"title\"\r\n                            label=\"Title\"\r\n                            margin=\"normal\"\r\n                            onChange={e => this.props.setFieldValue('slug', e.target.value.toLowerCase().replace(/ /g, '_'))}\r\n                            fullWidth\r\n                        />\r\n                        <FormikTextField\r\n                            name=\"slug\"\r\n                            label=\"Slug\"\r\n                            margin=\"normal\"\r\n                        />\r\n                        <FormikTextField\r\n                            name=\"content\"\r\n                            label=\"Content\"\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                        />\r\n                    </Paper>\r\n                    <Paper className={classes.rightSide}>\r\n                        <FormikSelectField \r\n                            name=\"status\"\r\n                            label=\"Status\"\r\n                            margin=\"normal\"\r\n                            options={[\r\n                                {label: 'Unpublished', value: false},\r\n                                {label: 'Published', value: true}\r\n                            ]}\r\n                            fullWidth\r\n                        />\r\n                        <div className={classes.Save}>\r\n                        <Button \r\n                            variant=\"contained\" \r\n                            color=\"secondary\"\r\n                            onClick={e => {\r\n                                this.props.handleSubmit();\r\n                            }}\r\n                            ><SaveIcon />Save</Button>\r\n                        </div>\r\n                        {this.props.admin.post.PostImage ?\r\n                            <img src={API.makeFileURL(this.props.admin.post.PostImage[0].url, this.props.auth.token)} className=\"post-image\" />\r\n                        : null}\r\n                        <div>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={e => {\r\n                                    $('.xxFile').trigger('click');\r\n                                }}\r\n                                ><ImageIcon />Upload</Button>\r\n                            <input type=\"file\" style={{display: 'none'}} className=\"xxFile\" onChange={this.uploadImage}/>\r\n                            \r\n                        </div>\r\n                    </Paper>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    admin: state.admin\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addPost: (post,token) => {\r\n        dispatch(AdminActions.addPost(post, token));\r\n    },\r\n    updatePost: (post, token) => {\r\n        dispatch(AdminActions.updatePost(post, token));\r\n    },\r\n    getSinglePost: (id, token) => {\r\n        dispatch(AdminActions.getSinglePost(id, token));\r\n    },\r\n    uploadImage: (data, token, postId, userId) => {\r\n        dispatch(AdminActions.uploadImage(data, token, postId, userId))\r\n    }\r\n});\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withFormik({\r\n    mapPropsToValues: (props) => ({\r\n        title: props.admin.post.title || '',\r\n        slug: props.admin.post.slug || '',\r\n        createdAt: props.admin.post.createdAt || '',\r\n        status: props.admin.post.status || false,\r\n        content: props.admin.post.content || ''\r\n    }), \r\n    validationSchema: Yup.object().shape({\r\n        title: Yup.string().required(),\r\n        slug: Yup.string().required(),\r\n        content: Yup.string().required()\r\n    }),\r\n    handleSubmit: (values, {setSubmitting, props}) => {\r\n        console.log(\"Saving\", props.addPost);\r\n        if(props.match.params.view === 'edit'){\r\n            const post = {\r\n                ...values,\r\n                id: props.match.params.id\r\n            }\r\n            props.updatePost(post, props.auth.token);\r\n        }else{\r\n            props.addPost(values, props.auth.token);\r\n        }\r\n    }\r\n})(withStyles(styles)(AddPost))));"]},"metadata":{},"sourceType":"module"}