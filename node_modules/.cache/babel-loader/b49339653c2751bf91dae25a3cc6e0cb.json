{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Long/Projects/tueminhbookstore/src/components/Common/CommentBuilder.js\";\nimport React, { Component } from 'react';\nimport * as SiteActions from '../../store/actions/siteActions';\nimport { connect } from 'react-redux';\nimport { withFormik } from 'formik';\nimport * as Yup from 'yup';\nimport Field from './Field';\nconst fields = [{\n  name: 'content',\n  type: 'text',\n  placeholder: 'Viet binh luan ....'\n}];\n\nclass CommentBuilder extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        minHeight: '0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        const comment = {\n          productId: this.props.site.product.id,\n          profileId: this.props.auth.profile.id,\n          userId: this.props.auth.user.id,\n          content: this.props.values.content\n        };\n        this.props.postComment(comment, this.props.auth.token);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Field, Object.assign({}, fields[0], {\n      value: this.props.values[fields[0].name],\n      name: fields[0].name,\n      onChange: this.props.handleChange,\n      onBlur: this.props.handleBlur,\n      touched: this.props.touched[fields[0].name],\n      errors: this.props.errors[fields[0].name],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    }, \"Submit\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  site: state.site\n});\n\nconst mapDispatchToProps = dispatch => ({\n  postComment: (comment, token) => {\n    dispatch(SiteActions.postComment(comment, token));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withFormik({\n  mapPropsToValues: () => ({\n    content: ''\n  }),\n  validationSchema: Yup.object().shape({\n    content: Yup.string().required('... ?? .. ??  .. ?? ...')\n  }),\n  handleSubmit: (values, {\n    setSubmitting\n  }, login) => {// login(values.email, values.password);\n  }\n})(CommentBuilder));","map":{"version":3,"sources":["/mnt/c/Users/Long/Projects/tueminhbookstore/src/components/Common/CommentBuilder.js"],"names":["React","Component","SiteActions","connect","withFormik","Yup","Field","fields","name","type","placeholder","CommentBuilder","render","minHeight","e","preventDefault","comment","productId","props","site","product","id","profileId","auth","profile","userId","user","content","values","postComment","token","handleChange","handleBlur","touched","errors","mapStateToProps","state","mapDispatchToProps","dispatch","mapPropsToValues","validationSchema","object","shape","string","required","handleSubmit","setSubmitting","login"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport * as SiteActions from '../../store/actions/siteActions';\r\nimport {connect} from 'react-redux';\r\nimport {withFormik} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Field from './Field';\r\n\r\nconst fields= [\r\n    {name: 'content',type: 'text', placeholder: 'Viet binh luan ....'},\r\n]\r\n\r\nclass CommentBuilder extends Component {\r\n    render(){\r\n        return(\r\n            <div style={{minHeight: '0'}}>\r\n                <form onSubmit={e => {\r\n                    e.preventDefault();\r\n                    const comment = {\r\n                        productId: this.props.site.product.id,\r\n                        profileId: this.props.auth.profile.id,\r\n                        userId: this.props.auth.user.id,\r\n                        content: this.props.values.content\r\n                    }\r\n                    this.props.postComment(comment, this.props.auth.token);\r\n                }}>\r\n                    <Field\r\n                        {...fields[0]}\r\n                        value={this.props.values[fields[0].name]}\r\n                        name={fields[0].name}\r\n                        onChange={this.props.handleChange}\r\n                        onBlur={this.props.handleBlur}\r\n                        touched={(this.props.touched[fields[0].name])}\r\n                        errors={this.props.errors[fields[0].name]}\r\n                    />\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    site: state.site\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    postComment: (comment, token) => {\r\n        dispatch(SiteActions.postComment(comment, token));\r\n    }\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withFormik({\r\n    mapPropsToValues: () => ({\r\n        content: ''\r\n    }),\r\n    validationSchema: Yup.object().shape({\r\n        content: Yup.string().required('... ?? .. ??  .. ?? ...')\r\n     }),\r\n\r\n    handleSubmit: (values, {setSubmitting}, login) => {\r\n        // login(values.email, values.password);\r\n    }\r\n})(CommentBuilder));"]},"metadata":{},"sourceType":"module"}