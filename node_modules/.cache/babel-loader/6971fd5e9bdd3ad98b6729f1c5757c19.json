{"ast":null,"code":"import axios from 'axios';\nconst host = 'http://localhost:8080';\nconst API = {\n  makeFileURL: (url, token) => {\n    return host + url + \"?access_token=\" + token;\n  },\n  login: (email, pass, success) => {\n    axios.post(`${host}/api/users/login`, {\n      email: email,\n      password: pass\n    }).then(res => {\n      success(res);\n    });\n  },\n  getUser: (userId, token, success) => {\n    axios.get(`${host}/api/users/${userId}?access_token=${token}`, {\n      params: {\n        filter: {\n          include: 'Profile'\n        }\n      }\n    });\n  },\n  register: (name, email, pass, success) => {\n    axios.post(`${host}/api/users`, {\n      name: name,\n      email: email,\n      password: pass\n    }).then(res => {\n      success(res);\n    }).catch(err => {\n      success(err);\n    });\n  },\n  getUsers: (token, success) => {\n    axios.get(`${host}/api/users?access_token=${token}`).then(res => {\n      success(res);\n    });\n  },\n  getPostCount: success => {\n    axios.get(`${host}/api/Posts/count`).then(res => {\n      success(res);\n    });\n  },\n  getPosts: (token, success) => {\n    axios.get(`${host}/api/Posts?access_token=${token}`).then(res => {\n      success(res);\n    });\n  },\n  getSitePosts: (skip, success) => {\n    axios.get(`${host}/api/Posts`, {\n      params: {\n        filter: {\n          skip: skip,\n          limit: 10,\n          include: 'PostImage',\n          fields: {\n            id: true,\n            title: true,\n            slug: true,\n            content: false\n          }\n        }\n      }\n    }).then(res => {\n      success(res);\n    });\n  },\n  addPost: (post, token, success) => {\n    axios.post(`${host}/api/Posts?access_token=${token}`, post).then(res => {\n      success(res);\n    });\n  },\n  updatePost: (post, token, success) => {\n    axios.patch(`${host}/api/Posts/${post.id}?access_token=${token}`, post).then(res => {\n      success(res);\n    });\n  },\n  getSinglePost: (id, token, success) => {\n    axios.get(`${host}/api/Posts/${id}?access_token=${token}`, {\n      params: {\n        filter: {\n          include: 'PostImage'\n        }\n      }\n    }).then(res => {\n      success(res);\n    });\n  },\n  uploadImage: (data, token, postId, userId, success) => {\n    axios.post(`${host}/api/PostImages/upload?post_id=${postId}&access_token=${token}&user_id=${userId}`, data).then(res => {\n      success(res);\n    });\n  },\n  getPostBySlug: (slug, token, success) => {\n    axios.get(`${host}/api/Posts/findOne?access_token=${token}`, {\n      params: {\n        filter: {\n          where: {\n            slug: slug\n          }\n        }\n      }\n    }).then(res => {\n      success(res);\n    });\n  },\n  getProductById: (id, token, success) => {\n    axios.get(`${host}/api/Products/findOne?access_token=${token}`, {\n      params: {\n        filter: {\n          where: {\n            id: id\n          },\n          include: 'Comment'\n        }\n      }\n    }).then(res => {\n      success(res);\n    });\n  },\n  getProductCount: success => {\n    axios.get(`${host}/api/Products/count`).then(res => {\n      success(res);\n    });\n  },\n  getProducts: (token, success) => {\n    axios.get(`${host}/api/Products?access_token=${token}`).then(res => {\n      success(res);\n    });\n  },\n  getSiteProducts: (skip, success) => {\n    axios.get(`${host}/api/Products`, {\n      params: {\n        filter: {\n          skip: skip,\n          limit: 3,\n          include: 'ProductImage',\n          fields: {\n            id: true,\n            name: true,\n            supplier: false,\n            author: true,\n            newPrice: true,\n            oldPrice: true,\n            publishing: true,\n            inventory: true\n          }\n        }\n      }\n    }).then(res => {\n      success(res);\n    });\n  },\n  addProduct: (product, token, success) => {\n    axios.post(`${host}/api/Products?access_token=${token}`, product).then(res => {\n      success(res);\n    });\n  },\n  updateProduct: (product, token, success) => {\n    axios.patch(`${host}/api/Products/${product.id}?access_token=${token}`, product).then(res => {\n      success(res);\n    });\n  },\n  getSingleProduct: (id, token, success) => {\n    axios.get(`${host}/api/Products/${id}?access_token=${token}`, {\n      params: {\n        filter: {\n          include: 'ProductImage'\n        }\n      }\n    }).then(res => {\n      success(res);\n    });\n  },\n  uploadProductImage: (data, token, productId, userId, success) => {\n    axios.post(`${host}/api/ProductImages/upload?product_id=${productId}&access_token=${token}&user_id=${userId}`, data).then(res => {\n      success(res);\n    });\n  },\n  postComment: (comment, token, success) => {\n    axios.post(`${host}/api/Comments?access_token=${token}`, comment).then(res => {\n      success(res);\n    });\n  }\n};\nexport default API;","map":{"version":3,"sources":["/mnt/c/Users/Dep Trai/Projects/tueminhbookstore/src/utils/api.js"],"names":["axios","host","API","makeFileURL","url","token","login","email","pass","success","post","password","then","res","getUser","userId","get","params","filter","include","register","name","catch","err","getUsers","getPostCount","getPosts","getSitePosts","skip","limit","fields","id","title","slug","content","addPost","updatePost","patch","getSinglePost","uploadImage","data","postId","getPostBySlug","where","getProductById","getProductCount","getProducts","getSiteProducts","supplier","author","newPrice","oldPrice","publishing","inventory","addProduct","product","updateProduct","getSingleProduct","uploadProductImage","productId","postComment","comment"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\n\r\nconst host = 'http://localhost:8080';\r\nconst API = {\r\n    makeFileURL: (url, token) => {\r\n        return host + url + \"?access_token=\" + token;\r\n    },\r\n    login: (email, pass, success) => {\r\n        axios.post(`${host}/api/users/login`, {email: email, password:pass})\r\n        .then(res => {\r\n            success(res);\r\n        });\r\n    },\r\n    getUser: (userId, token, success) => {\r\n        axios.get(`${host}/api/users/${userId}?access_token=${token}`, {\r\n            params: {\r\n                filter: {\r\n                    include: 'Profile'\r\n                }\r\n            }\r\n        })\r\n    },\r\n    register: (name, email, pass, success) => {\r\n        axios.post(`${host}/api/users`, {name: name, email: email, password: pass})\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n        .catch(err => {\r\n            success(err);\r\n        })\r\n    },\r\n    getUsers: (token, success) => {\r\n        axios.get(`${host}/api/users?access_token=${token}`)\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getPostCount: (success) => {\r\n        axios.get(`${host}/api/Posts/count`)\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getPosts: (token, success) => {\r\n        axios.get(`${host}/api/Posts?access_token=${token}`)\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getSitePosts: (skip, success) => {\r\n        axios.get(`${host}/api/Posts`, {\r\n            params: {\r\n                filter: {\r\n                    skip: skip,\r\n                    limit: 10,\r\n                    include: 'PostImage',\r\n                    fields: {\r\n                        id: true,\r\n                        title: true,\r\n                        slug: true,\r\n                        content: false\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    addPost: (post,token,success) => {\r\n        axios.post(`${host}/api/Posts?access_token=${token}`, post)\r\n        .then(res => {\r\n            success(res);\r\n        });\r\n    },\r\n    updatePost: (post, token, success) => {\r\n        axios.patch(`${host}/api/Posts/${post.id}?access_token=${token}`, post)\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getSinglePost: (id, token, success) => {\r\n        axios.get(`${host}/api/Posts/${id}?access_token=${token}`, {\r\n            params: {\r\n                filter: {\r\n                    include: 'PostImage'\r\n                }\r\n            }\r\n        })\r\n        .then(res => {\r\n            success(res);\r\n        });\r\n    },\r\n    uploadImage: (data, token, postId, userId, success) => {\r\n        axios.post(`${host}/api/PostImages/upload?post_id=${postId}&access_token=${token}&user_id=${userId}`, data)\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getPostBySlug: (slug, token, success) => {\r\n        axios.get(`${host}/api/Posts/findOne?access_token=${token}`, {\r\n            params: {\r\n                filter: {\r\n                    where: {slug: slug}\r\n                }\r\n            }\r\n        }).then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getProductById: (id, token, success) => {\r\n        axios.get(`${host}/api/Products/findOne?access_token=${token}`, {\r\n            params: {\r\n                filter: {\r\n                    where: {id: id},\r\n                    include: 'Comment'\r\n                }\r\n            }\r\n        }).then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getProductCount: (success) => {\r\n        axios.get(`${host}/api/Products/count`)\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getProducts: (token, success) => {\r\n        axios.get(`${host}/api/Products?access_token=${token}`)\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getSiteProducts: (skip, success) => {\r\n        axios.get(`${host}/api/Products`, {\r\n            params: {\r\n                filter: {\r\n                    skip: skip,\r\n                    limit: 3,\r\n                    include: 'ProductImage',\r\n                    fields: {\r\n                        id: true,\r\n                        name: true,\r\n                        supplier: false,\r\n                        author: true,\r\n                        newPrice: true,\r\n                        oldPrice: true,\r\n                        publishing: true,\r\n                        inventory: true\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    addProduct: (product,token,success) => {\r\n        axios.post(`${host}/api/Products?access_token=${token}`, product)\r\n        .then(res => {\r\n            success(res);\r\n        });\r\n    },\r\n    updateProduct: (product, token, success) => {\r\n        axios.patch(`${host}/api/Products/${product.id}?access_token=${token}`, product)\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    getSingleProduct: (id, token, success) => {\r\n        axios.get(`${host}/api/Products/${id}?access_token=${token}`, {\r\n            params: {\r\n                filter: {\r\n                    include: 'ProductImage'\r\n                }\r\n            }\r\n        })\r\n        .then(res => {\r\n            success(res);\r\n        });\r\n    },\r\n    uploadProductImage: (data, token, productId, userId, success) => {\r\n        axios.post(`${host}/api/ProductImages/upload?product_id=${productId}&access_token=${token}&user_id=${userId}`, data)\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    },\r\n    postComment: (comment, token, success) => {\r\n        axios.post(`${host}/api/Comments?access_token=${token}`, comment)\r\n        .then(res => {\r\n            success(res);\r\n        })\r\n    }\r\n}\r\n\r\nexport default API;"]},"metadata":{},"sourceType":"module"}