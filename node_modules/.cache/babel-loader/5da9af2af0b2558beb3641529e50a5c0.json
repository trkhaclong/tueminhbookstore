{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Dep Trai/Projects/tueminhbookstore/src/components/Pages/Login.js\";\nimport React, { Component } from 'react';\nimport { withFormik } from 'formik';\nimport * as Yup from 'yup';\nimport Field from '../Common/Field';\nimport { connect } from 'react-redux';\nconst fields = [{\n  name: 'email',\n  type: 'email',\n  placeholder: 'Email address'\n}, {\n  name: 'password',\n  type: 'password',\n  placeholder: 'Password'\n}];\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-account section-padding\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-sm-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.props.handleSubmit,\n      className: \"create-account-form\",\n      method: \"post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 24\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"heading-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 29\n      }\n    }, \"LOGIN\"), fields.map((f, i) => {\n      return /*#__PURE__*/React.createElement(Field, Object.assign({}, f, {\n        key: i,\n        value: this.props.value[f.name],\n        name: f.name,\n        onChange: this.props.handleChange,\n        onBlur: this.props.handleBlur,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 40\n        }\n      }));\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lost-password form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      rel: \"nofollow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 33\n      }\n    }, \"Forgot your password?\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      name: \"submitcreate\",\n      id: \"submitcreate\",\n      type: \"submit\",\n      className: \"btn-default\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-user left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 41\n      }\n    }), \"SIGN IN\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-sm-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      action: \"#\",\n      className: \"create-account-form\",\n      method: \"post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"heading-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 29\n      }\n    }, \"CREATE AN ACCOUNT\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      name: \"submitcreate\",\n      id: \"submitcreate\",\n      type: \"submit\",\n      className: \"btn-default\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-user left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 41\n      }\n    }), \"Create an account\"))))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: (email, pass) => {\n      console.log(\"Loging in\", email);\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withFormik({\n  mapPropstoValues: () => ({\n    email: '',\n    password: ''\n  }),\n  validationSchema: Yup.object().shape({\n    email: Yup.string().email('Email is invalid.').required('Login with email.'),\n    password: Yup.string().required('Enter Password')\n  }),\n  handleSubmit: (values, {\n    setSubmitting\n  }, login) => {\n    console.log(\"Login attempt\", values);\n    login(values.email, values.password);\n  }\n})(Login));","map":{"version":3,"sources":["/mnt/c/Users/Dep Trai/Projects/tueminhbookstore/src/components/Pages/Login.js"],"names":["React","Component","withFormik","Yup","Field","connect","fields","name","type","placeholder","Login","constructor","props","state","email","password","render","handleSubmit","map","f","i","value","handleChange","handleBlur","mapStateToProps","auth","mapDispatchToProps","dispatch","login","pass","console","log","mapPropstoValues","validationSchema","object","shape","string","required","values","setSubmitting"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {withFormik} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Field from '../Common/Field';\r\nimport {connect} from 'react-redux';\r\n\r\nconst fields= [\r\n    {name: 'email',type: 'email', placeholder: 'Email address'},\r\n    {name: 'password',type: 'password', placeholder: 'Password'}\r\n];\r\n\r\nclass Login extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: ''        \r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n        <div className=\"login-account section-padding\">\r\n           <div className=\"container\">\r\n                <div className=\"row\">\r\n                    \r\n                    <div className=\"col-md-6 col-sm-6\">\r\n                       <form onSubmit={this.props.handleSubmit} className=\"create-account-form\" method=\"post\">\r\n                            <h2 className=\"heading-title\">\r\n                                LOGIN\r\n                            </h2>\r\n                            {fields.map((f, i) => {\r\n                                return <Field   \r\n                                            {...f}\r\n                                            key={i} \r\n                                            value={this.props.value[f.name]}\r\n                                            name={f.name}\r\n                                            onChange={this.props.handleChange}\r\n                                            onBlur={this.props.handleBlur}\r\n                                                \r\n                                        />\r\n                            })}\r\n                            <p className=\"lost-password form-group\">\r\n                                <a href=\"#\" rel=\"nofollow\">Forgot your password?</a>\r\n                            </p> \r\n                            <div className=\"submit\">\t\t\t\t\t\r\n                                <button name=\"submitcreate\" id=\"submitcreate\" type=\"submit\" className=\"btn-default\">\r\n                                    <span>\r\n                                        <i className=\"fa fa-user left\"></i>\r\n                                        SIGN IN\r\n                                    </span>\r\n                                </button>\r\n                            </div>                          \r\n                       </form>\r\n                    </div>\r\n                    <div className=\"col-md-6 col-sm-6\">\r\n                        <form action=\"#\" className=\"create-account-form\" method=\"post\">\r\n                            <h2 className=\"heading-title\">\r\n                                CREATE AN ACCOUNT\r\n                            </h2>\r\n                            <div className=\"submit\">\t\t\t\t\t\r\n                                <button name=\"submitcreate\" id=\"submitcreate\" type=\"submit\" className=\"btn-default\">\r\n                                    <span>\r\n                                        <i className=\"fa fa-user left\"></i>\r\n                                        Create an account\r\n                                    </span>\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>               \r\n           </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        login: (email, pass) => {\r\n            console.log(\"Loging in\", email)\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withFormik({\r\n    mapPropstoValues: () => ({\r\n        email: '',\r\n        password: '',\r\n    }),\r\n    validationSchema: Yup.object().shape({\r\n        email: Yup.string().email('Email is invalid.').required('Login with email.'),\r\n        password: Yup.string().required('Enter Password')\r\n     }),\r\n\r\n    handleSubmit: (values, {setSubmitting}, login) => {\r\n        console.log(\"Login attempt\", values);\r\n        login(values.email, values.password);\r\n    }\r\n})(Login));"]},"metadata":{},"sourceType":"module"}